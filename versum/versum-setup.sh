#!/bin/bash
echo "Setting up VERSUM contracts"
echo "Loading configuration"
source .env

if [ -z ${ADMIN_ADDRESS+x} ];
then echo "Missing env var: ADMIN_ADDRESS";
fi

if [ -z ${NFT_OWNER+x} ];
then echo "Missing env var: NFT_OWNER";
fi

if [ -z ${ORIGINATOR_ALIAS+x} ];
then echo "Missing env var: ORIGINATOR_ALIAS";
fi

if [ -z ${NETWORK+x} ];
then echo "Missing env var: NETWORK";
fi

if [ -z ${MAINNET_NODE+x} ];
then echo "Missing env var: MAINNET_NODE";
fi

if [ -z ${TARGET_NODE+x} ];
then echo "Missing env var: TARGET_NODE";
fi

#Versum market -> KT1GyRAJNdizF1nojQz62uGYkx8WFRUJm9X5
#Versum administrator -> KT1XumYAxnPCrDiLU4XLNciZncExAzdEJrua
#Versum contract registry -> KT1BMWkNX3zRDH1a6A4PJ1uHjhAm44jhQvrB
#Versum identity -> KT1NUrzs7tiT4VbNPqeTxgAFa4SXeV1f3xe9
#Versum royalties -> KT1NffZ1mqqcXrwYY3ZNaAYxhYkyiDvvTZ3C
#Versum items -> KT1LjmAdYQCLBjwv4S2oFkEzyHVkomAf5MrW
#Versum materia -> KT1KRvNVubq64ttPbQarxec5XdS6ZQU4DVD2
#Versum KYC proxy -> KT1CdAeM5FzmtUVypP6RnihDBxzj5ssYLhUK
#Versum Price proxy -> KT1LZoWxTR6c6HNZVsKZaEpcyujGgJdvCNCV

mkdir -p data
# echo "Downloading contract codes..."

# echo "- Downloading VERSUM market..."
# tezos-client -E $MAINNET_NODE get contract code for KT1GyRAJNdizF1nojQz62uGYkx8WFRUJm9X5 > contracts/versum_market.tz
# echo "--> Downloaded VERSUM market"

# echo "- Downloading VERSUM administrator..."
# tezos-client -E $MAINNET_NODE get contract code for KT1XumYAxnPCrDiLU4XLNciZncExAzdEJrua > contracts/versum_admin.tz
# echo "--> Downloaded VERSUM administrator"

# echo "- Downloading VERSUM contract registry..."
# tezos-client -E $MAINNET_NODE get contract code for KT1BMWkNX3zRDH1a6A4PJ1uHjhAm44jhQvrB > contracts/versum_registry.tz
# echo "--> Downloaded VERSUM contract registry"

# echo "- Downloading VERSUM identity..."
# tezos-client -E $MAINNET_NODE get contract code for KT1NUrzs7tiT4VbNPqeTxgAFa4SXeV1f3xe9 > contracts/versum_identity.tz
# echo "--> Downloaded VERSUM identity"

# echo "- Downloading VERSUM royalties..."
# tezos-client -E $MAINNET_NODE get contract code for KT1NffZ1mqqcXrwYY3ZNaAYxhYkyiDvvTZ3C > contracts/versum_royalties.tz
# echo "--> Downloaded VERSUM royalties"

# echo "- Downloading VERSUM item..."
# tezos-client -E $MAINNET_NODE get contract code for KT1LjmAdYQCLBjwv4S2oFkEzyHVkomAf5MrW > contracts/versum_items.tz
# echo "--> Downloaded VERSUM items"

# echo "- Downloading VERSUM materia..."
# tezos-client -E $MAINNET_NODE get contract code for KT1KRvNVubq64ttPbQarxec5XdS6ZQU4DVD2 > contracts/versum_materia.tz
# echo "--> Downloaded VERSUM materia"

# echo "- Downloading VERSUM KYC proxy..."
# tezos-client -E $MAINNET_NODE get contract code for KT1CdAeM5FzmtUVypP6RnihDBxzj5ssYLhUK > contracts/versum_kyc_proxy.tz
# echo "--> Downloaded VERSUM KYC proxy"

# echo "- Downloading VERSUM price proxy..."
# tezos-client -E $MAINNET_NODE get contract code for KT1LZoWxTR6c6HNZVsKZaEpcyujGgJdvCNCV > contracts/versum_price_proxy.tz
# echo "--> Downloaded VERSUM price proxy"

echo

echo "Deploying Versum Administrator"
tezos-client -E $TARGET_NODE originate contract versum_administrator_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_admin.tz --init '(Pair (Pair (Pair (Pair { { PUSH bool False ;
                            SWAP ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 3 ;
                            GET 4 ;
                            COMPARE ;
                            EQ ;
                            IF { DROP 2 ; PUSH bool True }
                               { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                 DUP 3 ;
                                 GET 4 ;
                                 COMPARE ;
                                 GT ;
                                 IF { SWAP ;
                                      DUP ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      CAR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      GET 3 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 5 ;
                                      CAR ;
                                      CAR ;
                                      PAIR 3 ;
                                      VIEW "is_admin_for" bool ;
                                      IF_NONE
                                        { SWAP ; DROP }
                                        { DROP 2 ;
                                          DUP ;
                                          GET 4 ;
                                          SWAP ;
                                          DUP ;
                                          CAR ;
                                          CDR ;
                                          SWAP ;
                                          DUP ;
                                          GET 3 ;
                                          SWAP ;
                                          CAR ;
                                          CAR ;
                                          PAIR 3 ;
                                          VIEW "is_admin_for" bool ;
                                          IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                    { SWAP ; DROP } } } }
                        (Pair "'$ADMIN_ADDRESS'"
                              { Elt "'$ADMIN_ADDRESS'" 0 }))
                  (Pair { "add_currency" ;
                          "add_fa2" ;
                          "add_market" ;
                          "claim_parcel" ;
                          "delegate" ;
                          "deprecate" ;
                          "genesis" ;
                          "handle_kyc" ;
                          "handle_verified" ;
                          "intervene" ;
                          "mint" ;
                          "mint_planet" ;
                          "moderate" ;
                          "moderate_hard" ;
                          "modify_flags" ;
                          "register_contract" ;
                          "set_administrator" ;
                          "set_fee" ;
                          "set_merkle_root" ;
                          "set_paused" ;
                          "set_requirement" ;
                          "set_royalties" ;
                          "set_royalty_adapter" ;
                          "set_tokens_may_be_infused" ;
                          "update_code" ;
                          "update_extra_db" ;
                          "update_token" ;
                          "withdraw_funds" }
                        (Pair 0 {})))
            (Pair (Pair "tz1burnburnburnburnburnburnburjAYjjX"
                        (Pair {}
                              { Elt ""
                                    0x697066733a2f2f516d506a5279325871444e484837774b686750564d433248355a42536f51774a556a44694c77366e45564d38617a }))
                  (Pair {} (Pair {} {}))))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "delegate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                PUSH mutez 0 ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SET_DELEGATE ;
                NIL operation ;
                SWAP ;
                CONS ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 4 ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 6 ;
                CAR ;
                SWAP ;
                SUB_MUTEZ ;
                ASSERT_SOME ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                CDR ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                DIG 2 ;
                CAR ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH nat 1 ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     ADD ;
                     COMPARE ;
                     LT ;
                     IF {} { UNIT ; FAILWITH } }
                   {} ;
                SWAP ;
                DUP ;
                DUG 2 ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                PUSH nat 1 ;
                DIG 7 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                ADD ;
                SOME ;
                DIG 6 ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {}
                   { PUSH bool False ;
                     DUP 3 ;
                     GET 8 ;
                     SENDER ;
                     MEM ;
                     IF { DUP 3 ;
                          GET 8 ;
                          SENDER ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          ITER { CAR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 IF { DROP 2 ; PUSH bool True }
                                    { SWAP ;
                                      DROP ;
                                      DUP 3 ;
                                      GET 7 ;
                                      SWAP ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      GET 6 } } }
                        {} ;
                     DUP ;
                     IF { DUP 3 ;
                          GET 8 ;
                          SENDER ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          DUP 3 ;
                          GET 3 ;
                          MEM ;
                          IF { DROP }
                             { PUSH bool True ;
                               DUP 4 ;
                               CAR ;
                               GET 3 ;
                               ITER { DUP 5 ;
                                      GET 5 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      DUP 6 ;
                                      GET 3 ;
                                      PAIR ;
                                      MEM ;
                                      IF { PUSH bool False ;
                                           DUP 6 ;
                                           GET 8 ;
                                           SENDER ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           ITER { CAR ;
                                                  SWAP ;
                                                  DUP ;
                                                  DUG 2 ;
                                                  IF { DROP 2 ; PUSH bool True }
                                                     { SWAP ; DROP ; DUP 6 ; GET 5 ; DUP 3 ; DIG 2 ; PAIR ; MEM } } ;
                                           SWAP ;
                                           DROP ;
                                           SWAP ;
                                           IF {} { DROP ; PUSH bool False } }
                                         { DROP } } ;
                               SWAP ;
                               DROP ;
                               IF {} { PUSH string "insufficient permissions" ; FAILWITH } } }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          IF_NONE
                            { PUSH string "cannot assign roles" ; FAILWITH }
                            { DROP ;
                              DUP 3 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 3 ;
                              CAR ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              SENDER ;
                              PAIR ;
                              MEM ;
                              IF { DUP 3 ;
                                   GET 3 ;
                                   GET 3 ;
                                   DUP 3 ;
                                   CAR ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   SENDER ;
                                   PAIR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   ITER { CAR ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          IF { DROP 2 ; PUSH bool True }
                                             { SWAP ;
                                               DROP ;
                                               DUP 3 ;
                                               GET 7 ;
                                               SWAP ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               GET 6 } } ;
                                   DUP ;
                                   IF { DUP 3 ;
                                        GET 3 ;
                                        GET 3 ;
                                        DUP 3 ;
                                        CAR ;
                                        IF_NONE { UNIT ; FAILWITH } {} ;
                                        SENDER ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { UNIT ; FAILWITH } {} ;
                                        DUP 3 ;
                                        GET 3 ;
                                        MEM ;
                                        IF { DROP }
                                           { PUSH bool True ;
                                             DUP 4 ;
                                             CAR ;
                                             GET 3 ;
                                             ITER { DUP 5 ;
                                                    GET 5 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    DUP 6 ;
                                                    GET 3 ;
                                                    PAIR ;
                                                    MEM ;
                                                    IF { PUSH bool False ;
                                                         DUP 6 ;
                                                         GET 3 ;
                                                         GET 3 ;
                                                         DUP 6 ;
                                                         CAR ;
                                                         IF_NONE { UNIT ; FAILWITH } {} ;
                                                         SENDER ;
                                                         PAIR ;
                                                         GET ;
                                                         IF_NONE { UNIT ; FAILWITH } {} ;
                                                         ITER { CAR ;
                                                                SWAP ;
                                                                DUP ;
                                                                DUG 2 ;
                                                                IF { DROP 2 ; PUSH bool True }
                                                                   { SWAP ; DROP ; DUP 6 ; GET 5 ; DUP 3 ; DIG 2 ; PAIR ; MEM } } ;
                                                         DUP ;
                                                         IF { PUSH bool False } { DUP 6 ; GET 8 ; SENDER ; MEM } ;
                                                         IF { DUP 6 ;
                                                              GET 8 ;
                                                              SENDER ;
                                                              GET ;
                                                              IF_NONE { UNIT ; FAILWITH } {} ;
                                                              ITER { CAR ;
                                                                     SWAP ;
                                                                     DUP ;
                                                                     DUG 2 ;
                                                                     IF { DROP 2 ; PUSH bool True }
                                                                        { SWAP ; DROP ; DUP 6 ; GET 5 ; DUP 3 ; DIG 2 ; PAIR ; MEM } } ;
                                                              SWAP ;
                                                              DROP }
                                                            { SWAP ; DROP } ;
                                                         SWAP ;
                                                         IF {} { DROP ; PUSH bool False } }
                                                       { DROP } } ;
                                             SWAP ;
                                             DROP ;
                                             IF {} { PUSH string "insufficient permissions" ; FAILWITH } } }
                                      { PUSH string "cannot assign roles" ; FAILWITH } }
                                 { PUSH string "cannot assign roles" ; FAILWITH } } } } ;
                PUSH nat 18446744073709551615 ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF { DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} }
                   { DUP 3 ;
                     GET 8 ;
                     SENDER ;
                     MEM ;
                     IF { DUP 3 ;
                          GET 8 ;
                          SENDER ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          DUP 3 ;
                          GET 3 ;
                          MEM ;
                          IF { DROP ;
                               PUSH nat 1 ;
                               DUP 3 ;
                               GET 8 ;
                               SENDER ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               DUP 3 ;
                               GET 3 ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               ADD }
                             { DUP 3 ;
                               GET 8 ;
                               SENDER ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               ITER { CAR ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      PUSH nat 1 ;
                                      DUP 6 ;
                                      GET 8 ;
                                      SENDER ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      DUP 4 ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      DUP 7 ;
                                      GET 7 ;
                                      DUP 5 ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      CAR ;
                                      CDR ;
                                      ADD ;
                                      ADD ;
                                      COMPARE ;
                                      LT ;
                                      IF { SWAP ;
                                           DROP ;
                                           PUSH nat 1 ;
                                           DUP 4 ;
                                           GET 8 ;
                                           SENDER ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           DUP 3 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           DUP 5 ;
                                           GET 7 ;
                                           DIG 3 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           CAR ;
                                           CDR ;
                                           ADD ;
                                           ADD }
                                         { DROP } } } }
                        {} } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                IF_NONE
                  { DUP 3 ;
                    GET 8 ;
                    DUP 3 ;
                    GET 4 ;
                    MEM ;
                    IF { DIG 2 ;
                         DUP ;
                         GET 8 ;
                         DUP ;
                         DUP 5 ;
                         GET 4 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DIG 4 ;
                         SOME ;
                         DIG 5 ;
                         GET 3 ;
                         UPDATE ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 8 }
                       { DIG 2 ;
                         DUP ;
                         GET 8 ;
                         EMPTY_MAP string nat ;
                         DIG 3 ;
                         SOME ;
                         DUP 5 ;
                         GET 3 ;
                         UPDATE ;
                         SOME ;
                         DIG 3 ;
                         GET 4 ;
                         UPDATE ;
                         UPDATE 8 } }
                  { DROP ;
                    DUP 3 ;
                    GET 3 ;
                    GET 3 ;
                    DUP 3 ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    DUP 4 ;
                    GET 4 ;
                    PAIR ;
                    MEM ;
                    IF { DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 8 ;
                         CAR ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DUP 9 ;
                         GET 4 ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DIG 7 ;
                         SOME ;
                         DIG 8 ;
                         GET 3 ;
                         UPDATE ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         EMPTY_MAP string nat ;
                         DIG 6 ;
                         SOME ;
                         DUP 8 ;
                         GET 3 ;
                         UPDATE ;
                         SOME ;
                         DUP 7 ;
                         CAR ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DIG 7 ;
                         GET 4 ;
                         PAIR ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR } } ;
                NIL operation ;
                PAIR } } ;
        Elt 5
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 6 ;
                MEM ;
                IF { UNIT ; FAILWITH } {} ;
                PUSH bool False ;
                PUSH nat 18446744073709551615 ;
                DUP 4 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF { SWAP ;
                     DROP ;
                     PUSH bool True ;
                     SWAP ;
                     DUP ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     COMPARE ;
                     LT ;
                     IF { DROP ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          SENDER ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} }
                        {} }
                   { PUSH bool False ;
                     PUSH bool True ;
                     DUP 6 ;
                     GET 8 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     ITER { CAR ;
                            DIG 2 ;
                            IF { PUSH bool True }
                               { DUP 6 ;
                                 GET 7 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 GET 5 } ;
                            DUG 2 ;
                            DIG 4 ;
                            IF { PUSH bool True }
                               { DUP 6 ;
                                 GET 7 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 GET 3 } ;
                            DUG 4 ;
                            DUP 4 ;
                            DUP 8 ;
                            GET 8 ;
                            SENDER ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            DUP 3 ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            DUP 9 ;
                            GET 7 ;
                            DUP 4 ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            CDR ;
                            ADD ;
                            COMPARE ;
                            LT ;
                            IF { DIG 3 ;
                                 DROP ;
                                 DUP 6 ;
                                 GET 8 ;
                                 SENDER ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 DUP 7 ;
                                 GET 7 ;
                                 DIG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 CDR ;
                                 ADD ;
                                 DUG 2 }
                               { DROP } } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     IF {} { PUSH string "May not create roles" ; FAILWITH } ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     ITER { DUP 7 ;
                            CAR ;
                            GET 3 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            MEM ;
                            IF { PUSH bool False ;
                                 DUP 8 ;
                                 GET 8 ;
                                 SENDER ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 ITER { CAR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        IF { DROP 2 ; PUSH bool True }
                                           { SWAP ; DROP ; DUP 8 ; GET 5 ; DUP 3 ; DIG 2 ; PAIR ; MEM } } ;
                                 SWAP ;
                                 DROP ;
                                 SWAP ;
                                 IF {} { DROP ; PUSH bool False } }
                               { DUP 5 ;
                                 SWAP ;
                                 DROP ;
                                 IF {} { PUSH string "Cannot create new permissions" ; FAILWITH } } } ;
                     SWAP ;
                     DROP ;
                     IF {} { PUSH string "Cannot grant permissions" ; FAILWITH } } ;
                PUSH nat 1 ;
                SWAP ;
                LSL ;
                DUP ;
                DUP 4 ;
                CAR ;
                GET 3 ;
                COMPARE ;
                GT ;
                IF { DROP ; SWAP ; DUP ; DUG 2 ; CAR ; GET 3 } {} ;
                DIG 3 ;
                DUP ;
                GET 7 ;
                DIG 4 ;
                DUP ;
                GET 5 ;
                SWAP ;
                DUP ;
                DUG 6 ;
                GET 3 ;
                PAIR ;
                DUP 6 ;
                CAR ;
                GET 4 ;
                IF { DUP 5 } { PUSH bool False } ;
                PAIR ;
                DUP 4 ;
                SENDER ;
                PAIR ;
                PAIR ;
                SOME ;
                DUP 6 ;
                GET 6 ;
                UPDATE ;
                UPDATE 7 ;
                DUG 3 ;
                DUP 3 ;
                CAR ;
                CAR ;
                ITER { DUP 5 ;
                       CAR ;
                       GET 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {}
                          { DIG 4 ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            PUSH bool True ;
                            DUP 6 ;
                            UPDATE ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            DUG 4 } ;
                       DIG 4 ;
                       DUP ;
                       GET 5 ;
                       PUSH (option unit) (Some Unit) ;
                       DIG 3 ;
                       DUP 7 ;
                       GET 6 ;
                       PAIR ;
                       UPDATE ;
                       UPDATE 5 ;
                       DUG 3 } ;
                DROP 3 ;
                NIL operation ;
                PAIR } } ;
        Elt 7
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF { DUP ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          GET 4 ;
                          SENDER ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          COMPARE ;
                          LT ;
                          IF {} { PUSH string "WHAAT?!" ; FAILWITH } } ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     NONE nat ;
                     DIG 6 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { DROP } ;
                NIL operation ;
                PAIR } } ;
        Elt 8
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } } ;
                PUSH bool False ;
                PUSH nat 18446744073709551615 ;
                DUP ;
                DUP ;
                DUP ;
                DUP ;
                DUP ;
                DUP ;
                DUP ;
                DUP 11 ;
                CAR ;
                CAR ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF { DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     PUSH bool True ;
                     DUG 4 ;
                     PUSH nat 0 ;
                     DUG 4 ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     DUG 4 ;
                     DUP 6 ;
                     DUG 4 ;
                     DUP 6 ;
                     DUG 4 }
                   { DUP 11 ;
                     GET 8 ;
                     SENDER ;
                     MEM ;
                     IF { DUP 11 ;
                          GET 8 ;
                          SENDER ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          ITER { CAR ;
                                 DUP 12 ;
                                 GET 7 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 MEM ;
                                 IF { DIG 9 ;
                                      IF { PUSH bool True }
                                         { DUP 11 ;
                                           GET 7 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           GET 6 } ;
                                      DUG 9 ;
                                      DUP 9 ;
                                      DUP 13 ;
                                      GET 7 ;
                                      DUP 3 ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      CAR ;
                                      CDR ;
                                      COMPARE ;
                                      LE ;
                                      IF { DIG 6 ;
                                           DROP ;
                                           DIG 7 ;
                                           DROP ;
                                           DUP 10 ;
                                           GET 7 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           CAR ;
                                           CDR ;
                                           DUP ;
                                           DUG 8 ;
                                           DUG 6 ;
                                           DUP 8 ;
                                           DUP 13 ;
                                           GET 8 ;
                                           SENDER ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           DUP 3 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           COMPARE ;
                                           LT ;
                                           IF { DIG 5 ;
                                                DROP ;
                                                DIG 6 ;
                                                DROP ;
                                                DUP 10 ;
                                                GET 8 ;
                                                SENDER ;
                                                GET ;
                                                IF_NONE { UNIT ; FAILWITH } {} ;
                                                SWAP ;
                                                GET ;
                                                IF_NONE { UNIT ; FAILWITH } {} ;
                                                DUP ;
                                                DUG 6 ;
                                                DUG 4 }
                                              { DROP } }
                                         { DROP } }
                                    { DROP } } }
                        {} ;
                     DUP 9 ;
                     IF {}
                        { DUP 10 ;
                          CAR ;
                          IF_NONE
                            { PUSH string "cannot assign roles" ; FAILWITH }
                            { DROP ;
                              DUP 11 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 11 ;
                              CAR ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              SENDER ;
                              PAIR ;
                              MEM ;
                              IF { DUP 11 ;
                                   GET 3 ;
                                   GET 3 ;
                                   DUP 11 ;
                                   CAR ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   SENDER ;
                                   PAIR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   ITER { CAR ;
                                          DUP 12 ;
                                          GET 7 ;
                                          SWAP ;
                                          DUP ;
                                          DUG 2 ;
                                          MEM ;
                                          IF { DIG 9 ;
                                               IF { PUSH bool True }
                                                  { DUP 11 ;
                                                    GET 7 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    GET 6 } ;
                                               DUG 9 ;
                                               DUP 7 ;
                                               DUP 13 ;
                                               GET 7 ;
                                               DUP 3 ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               CAR ;
                                               CDR ;
                                               COMPARE ;
                                               LE ;
                                               IF { DIG 6 ;
                                                    DROP ;
                                                    DUP 11 ;
                                                    GET 7 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    CAR ;
                                                    CDR ;
                                                    DUG 6 ;
                                                    DUP 8 ;
                                                    DUP 13 ;
                                                    GET 3 ;
                                                    GET 3 ;
                                                    DUP 13 ;
                                                    CAR ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    SENDER ;
                                                    PAIR ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    DUP 3 ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    COMPARE ;
                                                    LT ;
                                                    IF { DIG 5 ;
                                                         DROP ;
                                                         DUP 11 ;
                                                         GET 3 ;
                                                         GET 3 ;
                                                         DUP 11 ;
                                                         CAR ;
                                                         IF_NONE { UNIT ; FAILWITH } {} ;
                                                         SENDER ;
                                                         PAIR ;
                                                         GET ;
                                                         IF_NONE { UNIT ; FAILWITH } {} ;
                                                         SWAP ;
                                                         GET ;
                                                         IF_NONE { UNIT ; FAILWITH } {} ;
                                                         DUG 4 }
                                                       { DROP } }
                                                  { DROP } }
                                             { DROP } } }
                                 {} ;
                              DUP 9 ;
                              IF {} { PUSH string "cannot assign roles" ; FAILWITH } } } } ;
                DUP 11 ;
                CAR ;
                CAR ;
                GET 4 ;
                DUP 11 ;
                GET 4 ;
                MEM ;
                IF { DIG 3 ;
                     DROP 4 ;
                     PUSH nat 0 ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     GET 4 ;
                     DUP 8 ;
                     GET 4 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 }
                   { DUP 11 ;
                     GET 8 ;
                     DUP 11 ;
                     GET 4 ;
                     MEM ;
                     IF { DUP 11 ;
                          GET 8 ;
                          DUP 11 ;
                          GET 4 ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          ITER { CAR ;
                                 DUP 12 ;
                                 GET 7 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 MEM ;
                                 IF { DUP 5 ;
                                      DUP 13 ;
                                      GET 7 ;
                                      DUP 3 ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      CAR ;
                                      CDR ;
                                      COMPARE ;
                                      LE ;
                                      IF { DIG 2 ;
                                           DROP ;
                                           DIG 3 ;
                                           DROP ;
                                           DUP 10 ;
                                           GET 7 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           CAR ;
                                           CDR ;
                                           DUP ;
                                           DUG 4 ;
                                           DUG 2 ;
                                           DUP 4 ;
                                           DUP 13 ;
                                           GET 8 ;
                                           DUP 13 ;
                                           GET 4 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           DUP 3 ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           COMPARE ;
                                           LT ;
                                           IF { SWAP ;
                                                DROP ;
                                                DIG 2 ;
                                                DROP ;
                                                DUP 10 ;
                                                GET 8 ;
                                                DUP 10 ;
                                                GET 4 ;
                                                GET ;
                                                IF_NONE { UNIT ; FAILWITH } {} ;
                                                SWAP ;
                                                GET ;
                                                IF_NONE { UNIT ; FAILWITH } {} ;
                                                DUP ;
                                                DUG 2 }
                                              { DROP } }
                                         { DROP } }
                                    { DROP } } }
                        {} ;
                     DUP 10 ;
                     CAR ;
                     IF_NONE
                       {}
                       { DROP ;
                         DUP 11 ;
                         GET 3 ;
                         GET 3 ;
                         DUP 11 ;
                         CAR ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DUP 12 ;
                         GET 4 ;
                         PAIR ;
                         MEM ;
                         IF { DUP 11 ;
                              GET 3 ;
                              GET 3 ;
                              DUP 11 ;
                              CAR ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              DUP 12 ;
                              GET 4 ;
                              PAIR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              ITER { CAR ;
                                     DUP 12 ;
                                     GET 7 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     MEM ;
                                     IF { DUP 3 ;
                                          DUP 13 ;
                                          GET 7 ;
                                          DUP 3 ;
                                          GET ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          CAR ;
                                          CDR ;
                                          COMPARE ;
                                          LE ;
                                          IF { DIG 2 ;
                                               DROP ;
                                               DUP 11 ;
                                               GET 7 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               CAR ;
                                               CDR ;
                                               DUG 2 ;
                                               DUP 4 ;
                                               DUP 13 ;
                                               GET 3 ;
                                               GET 3 ;
                                               DUP 13 ;
                                               CAR ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               DUP 14 ;
                                               GET 4 ;
                                               PAIR ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               DUP 3 ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               COMPARE ;
                                               LT ;
                                               IF { SWAP ;
                                                    DROP ;
                                                    DUP 11 ;
                                                    GET 3 ;
                                                    GET 3 ;
                                                    DUP 11 ;
                                                    CAR ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    DUP 12 ;
                                                    GET 4 ;
                                                    PAIR ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    SWAP ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} }
                                                  { DROP } }
                                             { DROP } }
                                        { DROP } } }
                            {} } } ;
                DUP 4 ;
                DUP 9 ;
                COMPARE ;
                GT ;
                IF { PUSH string "cannot assign roles" ; FAILWITH } {} ;
                DUP 4 ;
                DUP 9 ;
                COMPARE ;
                EQ ;
                IF { DUP 3 ;
                     DUP 8 ;
                     COMPARE ;
                     GE ;
                     IF { DUP 10 ;
                          CAR ;
                          IF_NONE
                            { PUSH string "cannot assign roles" ; FAILWITH }
                            { DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP 7 ;
                              COMPARE ;
                              GT ;
                              IF { PUSH string "cannot assign roles" ; FAILWITH } {} ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              DUP 7 ;
                              COMPARE ;
                              EQ ;
                              IF { DUP ;
                                   DUP 6 ;
                                   COMPARE ;
                                   GE ;
                                   IF { PUSH string "cannot assign roles" ; FAILWITH } {} }
                                 {} } }
                        {} }
                   {} ;
                DUP 10 ;
                CAR ;
                IF_NONE
                  { DUP 11 ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    GET 8 ;
                    DUP 2 ;
                    GET 4 ;
                    MEM ;
                    IF { SWAP ;
                         DUP ;
                         GET 8 ;
                         DUP ;
                         DUP 4 ;
                         GET 4 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         NONE nat ;
                         DIG 5 ;
                         GET 3 ;
                         UPDATE ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 8 }
                       { DROP } }
                  { DROP ;
                    DUP 11 ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    SWAP ;
                    DROP ;
                    GET 3 ;
                    GET 3 ;
                    DUP 2 ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    DUP 3 ;
                    GET 4 ;
                    PAIR ;
                    MEM ;
                    IF { SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         DUP ;
                         DUP 7 ;
                         CAR ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DUP 8 ;
                         GET 4 ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         NONE nat ;
                         DIG 8 ;
                         GET 3 ;
                         UPDATE ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DROP } } ;
                NIL operation ;
                PAIR } } })' --burn-cap 10 --force > data/versum_administrator_deploy.txt
versum_administrator=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_administrator_deploy.txt)
echo $versum_administrator

echo "Deploying Versum price proxy"
tezos-client -E $TARGET_NODE originate contract versum_price_proxy_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_price_proxy.tz --init '(Pair (Pair (Pair { { PUSH bool False ;
                      SWAP ;
                      DUP ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 3 ;
                      GET 4 ;
                      COMPARE ;
                      EQ ;
                      IF { DROP 2 ; PUSH bool True }
                         { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                           DUP 3 ;
                           GET 4 ;
                           COMPARE ;
                           GT ;
                           IF { SWAP ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 5 ;
                                CAR ;
                                CAR ;
                                PAIR 3 ;
                                VIEW "is_admin_for" bool ;
                                IF_NONE
                                  { SWAP ; DROP }
                                  { DROP 2 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    CAR ;
                                    PAIR 3 ;
                                    VIEW "is_admin_for" bool ;
                                    IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                              { SWAP ; DROP } } } }
                  (Pair "'$versum_administrator'"
                        { Elt "EUR" 890000 ; Elt "USD" 1000000 }))
            (Pair (Pair { Elt ""
                              0x697066733a2f2f516d6557647975576b3755763742596544326e756f58704a39386e72664343786f506750576956527252315a504e }
                        {})
                  (Pair {}
                        { { DROP ;
                            PUSH address 0x0174542aa7160afa9d400fbbc39c6d270e56957b6300 ;
                            PUSH string "XTZ-USD" ;
                            VIEW "getPrice" (pair timestamp nat) ;
                            IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                            CDR } })))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 3 ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP 5 ;
                CAR ;
                SOME ;
                DIG 5 ;
                CDR ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 5 ;
                DUP 3 ;
                CDR ;
                SOME ;
                DIG 3 ;
                CAR ;
                UPDATE ;
                UPDATE 5 ;
                NIL operation ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                DUP 5 ;
                CDR ;
                SOME ;
                DIG 5 ;
                CAR ;
                UPDATE ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                UPDATE 6 ;
                NIL operation ;
                PAIR } } })' --burn-cap 10 --force > data/versum_price_proxy_deploy.txt
versum_price_proxy=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_price_proxy_deploy.txt)
echo $versum_price_proxy

echo "Deploying Versum KYC Proxy"
tezos-client -E $TARGET_NODE originate contract versum_kyc_proxy_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_kyc_proxy.tz --init '(Pair (Pair (Pair { { PUSH bool False ;
                      SWAP ;
                      DUP ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 3 ;
                      GET 4 ;
                      COMPARE ;
                      EQ ;
                      IF { DROP 2 ; PUSH bool True }
                         { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                           DUP 3 ;
                           GET 4 ;
                           COMPARE ;
                           GT ;
                           IF { SWAP ;
                                DUP ;
                                GET 4 ;
                                SWAP ;
                                DUP ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                GET 3 ;
                                SWAP ;
                                DUP ;
                                DUG 5 ;
                                CAR ;
                                CAR ;
                                PAIR 3 ;
                                VIEW "is_admin_for" bool ;
                                IF_NONE
                                  { SWAP ; DROP }
                                  { DROP 2 ;
                                    DUP ;
                                    GET 4 ;
                                    SWAP ;
                                    DUP ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    GET 3 ;
                                    SWAP ;
                                    CAR ;
                                    CAR ;
                                    PAIR 3 ;
                                    VIEW "is_admin_for" bool ;
                                    IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                              { SWAP ; DROP } } } }
                  "'$versum_administrator'")
            (Pair { { PUSH bool True ;
                      PUSH timestamp 0 ;
                      PUSH address 0x01ba6745d19bf4fddd00662d39956f0ccb29a0f47b00 ;
                      DUP 4 ;
                      VIEW "getProofsForAddress"
                           (map string
                                (pair (map %meta string string) (pair (timestamp %register_date) (bool %verified)))) ;
                      IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                      PUSH string "gov" ;
                      MEM ;
                      IF { SWAP ;
                           IF { NOW ;
                                PUSH int 31536000 ;
                                PUSH address 0x01ba6745d19bf4fddd00662d39956f0ccb29a0f47b00 ;
                                DUP 5 ;
                                VIEW "getProofsForAddress"
                                     (map string
                                          (pair (map %meta string string) (pair (timestamp %register_date) (bool %verified)))) ;
                                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                PUSH string "gov" ;
                                GET ;
                                IF_NONE { UNIT ; FAILWITH } {} ;
                                GET 3 ;
                                ADD ;
                                COMPARE ;
                                GT }
                              { PUSH bool False } ;
                           IF { PUSH address 0x01ba6745d19bf4fddd00662d39956f0ccb29a0f47b00 ;
                                DUP 3 ;
                                VIEW "getProofsForAddress"
                                     (map string
                                          (pair (map %meta string string) (pair (timestamp %register_date) (bool %verified)))) ;
                                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                PUSH string "gov" ;
                                GET ;
                                IF_NONE { UNIT ; FAILWITH } {} ;
                                GET 4 }
                              { PUSH bool False } ;
                           SWAP ;
                           PUSH address 0x01ba6745d19bf4fddd00662d39956f0ccb29a0f47b00 ;
                           DUP 4 ;
                           VIEW "getProofsForAddress"
                                (map string
                                     (pair (map %meta string string) (pair (timestamp %register_date) (bool %verified)))) ;
                           IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                           PUSH string "gov" ;
                           GET ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           PUSH string "kyc_versum_verified" ;
                           MEM ;
                           IF { DROP ;
                                IF { PUSH string "true" ;
                                     PUSH address 0x01ba6745d19bf4fddd00662d39956f0ccb29a0f47b00 ;
                                     DUP 3 ;
                                     VIEW "getProofsForAddress"
                                          (map string
                                               (pair (map %meta string string) (pair (timestamp %register_date) (bool %verified)))) ;
                                     IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                     PUSH string "gov" ;
                                     GET ;
                                     IF_NONE { UNIT ; FAILWITH } {} ;
                                     CAR ;
                                     PUSH string "kyc_versum_verified" ;
                                     GET ;
                                     IF_NONE { UNIT ; FAILWITH } {} ;
                                     COMPARE ;
                                     EQ }
                                   { PUSH bool False } ;
                                PUSH int 31536000 ;
                                PUSH address 0x01ba6745d19bf4fddd00662d39956f0ccb29a0f47b00 ;
                                DIG 3 ;
                                VIEW "getProofsForAddress"
                                     (map string
                                          (pair (map %meta string string) (pair (timestamp %register_date) (bool %verified)))) ;
                                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                PUSH string "gov" ;
                                GET ;
                                IF_NONE { UNIT ; FAILWITH } {} ;
                                GET 3 ;
                                ADD }
                              { SWAP ; DROP ; SWAP ; DROP ; PUSH bool False ; SWAP } }
                         { SWAP ; DROP ; SWAP ; DROP ; PUSH bool False ; SWAP } ;
                      SWAP ;
                      PAIR } }
                  { Elt ""
                        0x697066733a2f2f516d654658664b734a5a437a466f62354a6d67613569413951786172686665416457434b456a4e37574b344b4a6f }))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                CAR ;
                DIG 2 ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT { UNIT ; FAILWITH } {} ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                UPDATE 3 ;
                NIL operation ;
                PAIR } } })' --burn-cap 10 --force > data/versum_kyc_proxy_deploy.txt
versum_kyc_proxy=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_kyc_proxy_deploy.txt)
echo $versum_kyc_proxy

echo "Deploying Versum identity"
tezos-client -E $TARGET_NODE originate contract versum_identity_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_identity.tz --init '(Pair (Pair (Pair (Pair (Pair { { PUSH bool False ;
                                  SWAP ;
                                  DUP ;
                                  CAR ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 3 ;
                                  GET 4 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP 2 ; PUSH bool True }
                                     { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                       DUP 3 ;
                                       GET 4 ;
                                       COMPARE ;
                                       GT ;
                                       IF { SWAP ;
                                            DUP ;
                                            GET 4 ;
                                            SWAP ;
                                            DUP ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            CAR ;
                                            PAIR 3 ;
                                            VIEW "is_admin_for" bool ;
                                            IF_NONE
                                              { SWAP ; DROP }
                                              { DROP 2 ;
                                                DUP ;
                                                GET 4 ;
                                                SWAP ;
                                                DUP ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                GET 3 ;
                                                SWAP ;
                                                CAR ;
                                                CAR ;
                                                PAIR 3 ;
                                                VIEW "is_admin_for" bool ;
                                                IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                          { SWAP ; DROP } } } }
                              "'$versum_administrator'")
                        (Pair 0 (Pair {} 0)))
                  (Pair (Pair {} (Pair "'$versum_kyc_proxy'" 15000000000))
                        (Pair "tz1burnburnburnburnburnburnburjAYjjX"
                              (Pair { { PUSH bool True ;
                                        PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                        DUP 3 ;
                                        GET 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { SWAP ;
                                             DUP ;
                                             GET 3 ;
                                             SWAP ;
                                             DUP ;
                                             GET 4 ;
                                             SWAP ;
                                             DUP ;
                                             DUG 4 ;
                                             CAR ;
                                             PAIR ;
                                             VIEW "may_modify_all" bool ;
                                             IF_NONE
                                               { SWAP ; DROP }
                                               { DROP 2 ;
                                                 DUP ;
                                                 GET 3 ;
                                                 SWAP ;
                                                 DUP ;
                                                 GET 4 ;
                                                 SWAP ;
                                                 CAR ;
                                                 PAIR ;
                                                 VIEW "may_modify_all" bool ;
                                                 IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                           { SWAP ; DROP } } }
                                    { Elt ""
                                          0x697066733a2f2f516d65474436777461525133467632574e4d52676f356e6656366343505039536a594146764b6972534a71385964 }))))
            (Pair (Pair (Pair {} 0x050100000000) (Pair 0x050100000000 (Pair 0 {})))
                  (Pair (Pair "'$versum_price_proxy'" (Pair False {}))
                        (Pair 0x050100000000 (Pair 0x050100000000 0)))))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate_hard") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP 4 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SENDER ;
                PAIR 3 ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {}
                          { DIG 2 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            PUSH (option
                                    (pair (pair (option timestamp) (pair (set string) timestamp))
                                          (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                                 (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                            DUP 8 ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 2 } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool True ;
                       PUSH string "hard_banned" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP 4 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SENDER ;
                PAIR 3 ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {}
                          { DIG 2 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            PUSH (option
                                    (pair (pair (option timestamp) (pair (set string) timestamp))
                                          (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                                 (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                            DUP 8 ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 2 } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool True ;
                       PUSH string "soft_banned" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "handle_verified") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {}
                          { DIG 2 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            PUSH (option
                                    (pair (pair (option timestamp) (pair (set string) timestamp))
                                          (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                                 (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                            DUP 8 ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 2 } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool True ;
                       PUSH string "verified" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate_hard") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {} { UNIT ; FAILWITH } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool False ;
                       PUSH string "hard_banned" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {} { UNIT ; FAILWITH } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool False ;
                       PUSH string "soft_banned" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 5
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "handle_verified") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP 4 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SENDER ;
                PAIR 3 ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool False ;
                       PUSH string "verified" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 6
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       MEM ;
                       IF {} { UNIT ; FAILWITH } ;
                       DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       GET 3 ;
                       PUSH string "hard_banned" ;
                       MEM ;
                       IF { PUSH bool True }
                          { DUP 3 ;
                            GET 5 ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            GET 3 ;
                            PUSH string "soft_banned" ;
                            MEM } ;
                       IF {} { UNIT ; FAILWITH } ;
                       DUP ;
                       CDR ;
                       ITER { DUP 4 ;
                              UNPAIR ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              DUP ;
                              DUP 8 ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              DIG 11 ;
                              GET 3 ;
                              GET 6 ;
                              DUP 10 ;
                              DUP 12 ;
                              CAR ;
                              PAIR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              ADD ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              PUSH (option nat) (Some 0) ;
                              DIG 7 ;
                              DUP 9 ;
                              CAR ;
                              PAIR ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              DUG 2 } ;
                       DROP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 7
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                          { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {} { UNIT ; FAILWITH } ;
                       DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       GET 3 ;
                       PUSH string "hard_banned" ;
                       MEM ;
                       IF { PUSH bool True }
                          { DUP 3 ;
                            GET 5 ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            GET 3 ;
                            PUSH string "soft_banned" ;
                            MEM } ;
                       IF {} { UNIT ; FAILWITH } ;
                       DUP 3 ;
                       UNPAIR ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DIG 8 ;
                       GET 5 ;
                       GET 4 ;
                       DUP 8 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       GET 5 ;
                       ADD ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       PUSH mutez 0 ;
                       UPDATE 5 ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 8
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } }
                          { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "delegate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                PUSH mutez 0 ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SET_DELEGATE ;
                NIL operation ;
                SWAP ;
                CONS ;
                PAIR } } ;
        Elt 9
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP 4 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SENDER ;
                PAIR 3 ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {}
                          { DIG 2 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            PUSH (option
                                    (pair (pair (option timestamp) (pair (set string) timestamp))
                                          (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                                 (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                            DUP 8 ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 2 } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool True ;
                       PUSH string "flagged" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 10
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "handle_kyc") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                MEM ;
                IF {}
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     DUP 8 ;
                     CAR ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 8 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                PUSH bool True ;
                PUSH string "kyc_check_ok" ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                DUP ;
                DUP 8 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CAR ;
                DIG 10 ;
                CDR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 11
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "handle_kyc") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 7 ;
                NIL address ;
                DUP 3 ;
                CONS ;
                DUP 4 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SENDER ;
                PAIR 3 ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF {} { PUSH string "User does not exist" ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 8 ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                PUSH bool False ;
                PUSH string "kyc_check_ok" ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                DUP ;
                DIG 7 ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CAR ;
                PUSH timestamp 0 ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 12
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                CAR ;
                DIG 4 ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 13
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 4 ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 14
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_merkle_root") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                CAR ;
                DUP 5 ;
                GET 3 ;
                SWAP ;
                PAIR ;
                SWAP ;
                CDR ;
                DUP 5 ;
                CAR ;
                SWAP ;
                CDR ;
                DIG 5 ;
                GET 4 ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 15
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_merkle_root") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                UPDATE 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                UPDATE 9 ;
                SWAP ;
                GET 4 ;
                UPDATE 10 ;
                NIL operation ;
                PAIR } } ;
        Elt 16
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "moderate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       MEM ;
                       IF {} { UNIT ; FAILWITH } ;
                       DIG 2 ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       DUP ;
                       DIG 7 ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       PUSH bool False ;
                       PUSH string "flagged" ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 17
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 5 ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 18
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                CDR ;
                DIG 4 ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 19
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 6 ;
                CAR ;
                SWAP ;
                SUB_MUTEZ ;
                ASSERT_SOME ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                CDR ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                DIG 2 ;
                CAR ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 20
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 7 ;
                CAR ;
                DIG 8 ;
                CAR ;
                CAR ;
                GET 5 ;
                DUP 9 ;
                GET 3 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH string "Too much!" ; FAILWITH } {} ;
                SOME ;
                DUP 8 ;
                GET 3 ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                GET 3 ;
                CAR ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                DIG 5 ;
                DUP ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 7 ;
                GET 3 ;
                CDR ;
                DIG 7 ;
                GET 4 ;
                PAIR 3 ;
                CONS ;
                SELF_ADDRESS ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 21
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP 7 ;
                CAR ;
                SWAP ;
                SUB_MUTEZ ;
                ASSERT_SOME ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                CDR ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                DIG 2 ;
                CAR ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 22
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } }
                      { UNIT ; FAILWITH } } ;
                NIL (pair address (pair nat nat)) ;
                PUSH nat 0 ;
                DUP 4 ;
                GET 5 ;
                GET 4 ;
                DUP 4 ;
                CAR ;
                CAR ;
                MEM ;
                IF {}
                   { DIG 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     DUP 10 ;
                     CAR ;
                     CAR ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 3 } ;
                PUSH nat 0 ;
                DUP 4 ;
                GET 4 ;
                ITER { DUP 6 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       MEM ;
                       IF {}
                          { DIG 5 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            PUSH (option
                                    (pair (pair (option timestamp) (pair (set string) timestamp))
                                          (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                                 (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                            DUP 8 ;
                            CAR ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 5 } ;
                       DUP 6 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       GET 3 ;
                       PUSH string "hard_banned" ;
                       MEM ;
                       IF { PUSH bool False }
                          { DUP 6 ;
                            GET 5 ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            GET 3 ;
                            PUSH string "soft_banned" ;
                            MEM ;
                            NOT } ;
                       IF { DUP 6 ;
                            CAR ;
                            GET 3 ;
                            GET 4 ;
                            PUSH nat 1000000 ;
                            DUP 8 ;
                            GET 5 ;
                            CAR ;
                            PUSH string "EUR" ;
                            DUP 9 ;
                            CAR ;
                            CDR ;
                            PAIR ;
                            VIEW "fa2_price_fiat" nat ;
                            IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                            DUP 4 ;
                            CDR ;
                            MUL ;
                            EDIV ;
                            IF_NONE { UNIT ; FAILWITH } { CAR } ;
                            DUP 8 ;
                            GET 5 ;
                            GET 4 ;
                            DUP 4 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            GET 6 ;
                            ADD ;
                            COMPARE ;
                            GT ;
                            IF { DIG 5 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUP 8 ;
                                 CAR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 PUSH bool True ;
                                 PUSH string "kyc_threshold_triggered" ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 5 }
                               {} ;
                            DUP 6 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            DUP ;
                            DUP 8 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            DUP ;
                            GET 6 ;
                            PUSH nat 1000000 ;
                            DIG 15 ;
                            GET 5 ;
                            CAR ;
                            PUSH string "EUR" ;
                            DUP 17 ;
                            CAR ;
                            CDR ;
                            PAIR ;
                            VIEW "fa2_price_fiat" nat ;
                            IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                            DUP 12 ;
                            CDR ;
                            MUL ;
                            EDIV ;
                            IF_NONE { UNIT ; FAILWITH } { CAR } ;
                            ADD ;
                            UPDATE 6 ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUP ;
                            DUG 6 ;
                            GET 5 ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            GET 3 ;
                            PUSH string "kyc_check_ok" ;
                            MEM ;
                            IF { NOW ;
                                 DUP 7 ;
                                 GET 5 ;
                                 GET 4 ;
                                 DUP 3 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 GET 4 ;
                                 COMPARE ;
                                 GT }
                               { PUSH bool False } ;
                            IF { PUSH bool False }
                               { DUP 6 ;
                                 GET 5 ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "kyc_threshold_triggered" ;
                                 MEM ;
                                 IF { PUSH bool True }
                                    { DUP 6 ;
                                      GET 5 ;
                                      GET 3 ;
                                      IF { DUP 6 ;
                                           GET 5 ;
                                           GET 4 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           GET ;
                                           IF_NONE { UNIT ; FAILWITH } {} ;
                                           CAR ;
                                           GET 3 ;
                                           PUSH string "basic_kyc_check_ok" ;
                                           MEM ;
                                           NOT }
                                         { PUSH bool False } } } ;
                            IF { DIG 5 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 DUP ;
                                 DIG 11 ;
                                 DUP ;
                                 CAR ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 13 ;
                                 CAR ;
                                 GET 3 ;
                                 PAIR ;
                                 DUP 9 ;
                                 CAR ;
                                 PAIR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 DUP 9 ;
                                 CDR ;
                                 ADD ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 5 }
                               { DUP 6 ;
                                 GET 5 ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "verified" ;
                                 MEM ;
                                 IF { DIG 3 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DUP 6 ;
                                      CAR ;
                                      GET 4 ;
                                      DUP 4 ;
                                      CAR ;
                                      PAIR 3 ;
                                      CONS ;
                                      DUG 3 }
                                    { DUP 6 ;
                                      GET 5 ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      CAR ;
                                      CAR ;
                                      IF_NONE
                                        { DIG 5 ;
                                          UNPAIR ;
                                          SWAP ;
                                          UNPAIR ;
                                          SWAP ;
                                          UNPAIR ;
                                          UNPAIR ;
                                          SWAP ;
                                          UNPAIR ;
                                          SWAP ;
                                          DUP ;
                                          DUP 8 ;
                                          CAR ;
                                          DUP ;
                                          DUG 2 ;
                                          GET ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          UNPAIR ;
                                          CDR ;
                                          NOW ;
                                          SOME ;
                                          PAIR ;
                                          PAIR ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          SWAP ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          DUP ;
                                          DUG 6 ;
                                          GET 3 ;
                                          GET 6 ;
                                          DIG 5 ;
                                          DUP ;
                                          CAR ;
                                          GET 4 ;
                                          SWAP ;
                                          DUP ;
                                          DUG 7 ;
                                          CAR ;
                                          GET 3 ;
                                          PAIR ;
                                          DUP 3 ;
                                          CAR ;
                                          PAIR ;
                                          MEM ;
                                          IF { DIG 5 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               DUP ;
                                               DIG 11 ;
                                               DUP ;
                                               CAR ;
                                               GET 4 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 13 ;
                                               CAR ;
                                               GET 3 ;
                                               PAIR ;
                                               DUP 9 ;
                                               CAR ;
                                               PAIR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               DUP 9 ;
                                               CDR ;
                                               ADD ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 5 }
                                             { DIG 5 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               DUP 7 ;
                                               CDR ;
                                               SOME ;
                                               DIG 11 ;
                                               DUP ;
                                               CAR ;
                                               GET 4 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 13 ;
                                               CAR ;
                                               GET 3 ;
                                               PAIR ;
                                               DUP 9 ;
                                               CAR ;
                                               PAIR ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 5 } ;
                                          DUP ;
                                          CDR ;
                                          DIG 2 ;
                                          ADD ;
                                          SWAP }
                                        { DROP ;
                                          NOW ;
                                          PUSH int 1209600 ;
                                          DUP 8 ;
                                          GET 5 ;
                                          GET 4 ;
                                          DUP 4 ;
                                          CAR ;
                                          GET ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          CAR ;
                                          CAR ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          ADD ;
                                          COMPARE ;
                                          LT ;
                                          IF { DIG 3 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 2 ;
                                               CDR ;
                                               DUP 6 ;
                                               CAR ;
                                               GET 4 ;
                                               DUP 4 ;
                                               CAR ;
                                               PAIR 3 ;
                                               CONS ;
                                               DUG 3 }
                                             { DUP 6 ;
                                               GET 3 ;
                                               GET 6 ;
                                               DIG 5 ;
                                               DUP ;
                                               CAR ;
                                               GET 4 ;
                                               SWAP ;
                                               DUP ;
                                               DUG 7 ;
                                               CAR ;
                                               GET 3 ;
                                               PAIR ;
                                               DUP 3 ;
                                               CAR ;
                                               PAIR ;
                                               MEM ;
                                               IF { DIG 5 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    DUP ;
                                                    DIG 11 ;
                                                    DUP ;
                                                    CAR ;
                                                    GET 4 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 13 ;
                                                    CAR ;
                                                    GET 3 ;
                                                    PAIR ;
                                                    DUP 9 ;
                                                    CAR ;
                                                    PAIR ;
                                                    DUP ;
                                                    DUG 2 ;
                                                    GET ;
                                                    IF_NONE { UNIT ; FAILWITH } {} ;
                                                    DUP 9 ;
                                                    CDR ;
                                                    ADD ;
                                                    SOME ;
                                                    SWAP ;
                                                    UPDATE ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DUG 5 }
                                                  { DIG 5 ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    UNPAIR ;
                                                    SWAP ;
                                                    DUP 7 ;
                                                    CDR ;
                                                    SOME ;
                                                    DIG 11 ;
                                                    DUP ;
                                                    CAR ;
                                                    GET 4 ;
                                                    SWAP ;
                                                    DUP ;
                                                    DUG 13 ;
                                                    CAR ;
                                                    GET 3 ;
                                                    PAIR ;
                                                    DUP 9 ;
                                                    CAR ;
                                                    PAIR ;
                                                    UPDATE ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    PAIR ;
                                                    SWAP ;
                                                    PAIR ;
                                                    DUG 5 } } ;
                                          DUP ;
                                          CDR ;
                                          DIG 2 ;
                                          ADD ;
                                          SWAP } } } }
                          { DUP ;
                            CDR ;
                            DIG 2 ;
                            ADD ;
                            SWAP ;
                            DUP 6 ;
                            CAR ;
                            CAR ;
                            GET 5 ;
                            DIG 5 ;
                            DUP ;
                            CAR ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 7 ;
                            CAR ;
                            GET 3 ;
                            PAIR ;
                            MEM ;
                            IF { DIG 5 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 DUP ;
                                 DIG 11 ;
                                 DUP ;
                                 CAR ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 13 ;
                                 CAR ;
                                 GET 3 ;
                                 PAIR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 DUP 9 ;
                                 CDR ;
                                 ADD ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUG 5 }
                               { DIG 5 ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 DUP 7 ;
                                 CDR ;
                                 SOME ;
                                 DIG 11 ;
                                 DUP ;
                                 CAR ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 13 ;
                                 CAR ;
                                 GET 3 ;
                                 PAIR ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUG 5 } } ;
                       DIG 2 ;
                       SWAP ;
                       CDR ;
                       ADD ;
                       SWAP } ;
                DUP ;
                PUSH nat 0 ;
                COMPARE ;
                LT ;
                IF { DIG 2 ; SWAP ; DUP 4 ; CAR ; GET 4 ; SELF_ADDRESS ; PAIR 3 ; CONS ; SWAP }
                   { DROP } ;
                NIL operation ;
                DUP 4 ;
                CAR ;
                GET 3 ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                DIG 5 ;
                DUP 7 ;
                GET 3 ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                DUP 4 ;
                CAR ;
                GET 3 ;
                GET 4 ;
                PUSH nat 1000000 ;
                DUP 6 ;
                GET 5 ;
                CAR ;
                PUSH string "EUR" ;
                DUP 7 ;
                CAR ;
                CDR ;
                PAIR ;
                VIEW "fa2_price_fiat" nat ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                DUP 5 ;
                MUL ;
                EDIV ;
                IF_NONE { UNIT ; FAILWITH } { CAR } ;
                DUP 6 ;
                GET 5 ;
                GET 4 ;
                DUP 6 ;
                CAR ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 6 ;
                ADD ;
                COMPARE ;
                GT ;
                IF { DIG 3 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUP 10 ;
                     CAR ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     PUSH bool True ;
                     PUSH string "kyc_threshold_triggered" ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 3 }
                   {} ;
                DUP 4 ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 10 ;
                CAR ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DUP ;
                GET 6 ;
                PUSH nat 1000000 ;
                DIG 13 ;
                GET 5 ;
                CAR ;
                PUSH string "EUR" ;
                DIG 14 ;
                CAR ;
                CDR ;
                PAIR ;
                VIEW "fa2_price_fiat" nat ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                DIG 12 ;
                MUL ;
                EDIV ;
                IF_NONE { UNIT ; FAILWITH } { CAR } ;
                ADD ;
                UPDATE 6 ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR } } ;
        Elt 23
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                          { UNIT ; FAILWITH } } } ;
                PUSH mutez 0 ;
                DUP ;
                AMOUNT ;
                COMPARE ;
                GT ;
                IF {} { UNIT ; FAILWITH } ;
                DUP 3 ;
                GET 5 ;
                GET 4 ;
                DUP 3 ;
                CAR ;
                MEM ;
                IF {}
                   { DIG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     DUP 9 ;
                     CAR ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 } ;
                NIL operation ;
                DUP 3 ;
                CDR ;
                ITER { DUP 5 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       MEM ;
                       IF {}
                          { DIG 4 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            PUSH (option
                                    (pair (pair (option timestamp) (pair (set string) timestamp))
                                          (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                                 (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                            DUP 8 ;
                            CAR ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUG 4 } ;
                       DUP 5 ;
                       GET 5 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       CAR ;
                       GET 3 ;
                       PUSH string "hard_banned" ;
                       MEM ;
                       IF { PUSH bool False }
                          { DUP 5 ;
                            GET 5 ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            GET 3 ;
                            PUSH string "soft_banned" ;
                            MEM ;
                            NOT } ;
                       IF { DUP 5 ;
                            CAR ;
                            GET 3 ;
                            GET 4 ;
                            PUSH nat 1000000 ;
                            DUP 7 ;
                            GET 5 ;
                            CAR ;
                            PUSH string "EUR" ;
                            VIEW "xtz_price_fiat" nat ;
                            IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                            PUSH mutez 1 ;
                            DUP 5 ;
                            CDR ;
                            EDIV ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            MUL ;
                            EDIV ;
                            IF_NONE { UNIT ; FAILWITH } { CAR } ;
                            DUP 7 ;
                            GET 5 ;
                            GET 4 ;
                            DUP 4 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            GET 6 ;
                            ADD ;
                            COMPARE ;
                            GT ;
                            IF { DIG 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUP 8 ;
                                 CAR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 PUSH bool True ;
                                 PUSH string "kyc_threshold_triggered" ;
                                 UPDATE ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 4 }
                               {} ;
                            DUP 5 ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            DUP ;
                            DUP 8 ;
                            CAR ;
                            DUP ;
                            DUG 2 ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            DUP ;
                            GET 6 ;
                            PUSH nat 1000000 ;
                            DIG 14 ;
                            GET 5 ;
                            CAR ;
                            PUSH string "EUR" ;
                            VIEW "xtz_price_fiat" nat ;
                            IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                            PUSH mutez 1 ;
                            DUP 13 ;
                            CDR ;
                            EDIV ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            MUL ;
                            EDIV ;
                            IF_NONE { UNIT ; FAILWITH } { CAR } ;
                            ADD ;
                            UPDATE 6 ;
                            SOME ;
                            SWAP ;
                            UPDATE ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            DUP ;
                            DUG 5 ;
                            GET 5 ;
                            GET 4 ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { UNIT ; FAILWITH } {} ;
                            CAR ;
                            GET 3 ;
                            PUSH string "kyc_check_ok" ;
                            MEM ;
                            IF { NOW ;
                                 DUP 6 ;
                                 GET 5 ;
                                 GET 4 ;
                                 DUP 3 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 GET 4 ;
                                 COMPARE ;
                                 GT }
                               { PUSH bool False } ;
                            IF { PUSH bool False }
                               { DUP 5 ;
                                 GET 5 ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "kyc_threshold_triggered" ;
                                 MEM } ;
                            IF { PUSH bool True }
                               { DUP 5 ;
                                 GET 5 ;
                                 GET 3 ;
                                 IF { DUP 5 ;
                                      GET 5 ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      CAR ;
                                      GET 3 ;
                                      PUSH string "basic_kyc_check_ok" ;
                                      MEM ;
                                      NOT }
                                    { PUSH bool False } } ;
                            IF { DIG 4 ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 UNPAIR ;
                                 SWAP ;
                                 UNPAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUP 8 ;
                                 CAR ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 DUP ;
                                 GET 5 ;
                                 DUP 10 ;
                                 CDR ;
                                 ADD ;
                                 UPDATE 5 ;
                                 SOME ;
                                 SWAP ;
                                 UPDATE ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 SWAP ;
                                 PAIR ;
                                 DUG 4 }
                               { DUP 5 ;
                                 GET 5 ;
                                 GET 4 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { UNIT ; FAILWITH } {} ;
                                 CAR ;
                                 GET 3 ;
                                 PUSH string "verified" ;
                                 MEM ;
                                 IF { DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      CONTRACT unit ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      DUP 3 ;
                                      CDR ;
                                      UNIT ;
                                      TRANSFER_TOKENS ;
                                      CONS ;
                                      SWAP }
                                    { DUP 5 ;
                                      GET 5 ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      GET ;
                                      IF_NONE { UNIT ; FAILWITH } {} ;
                                      CAR ;
                                      CAR ;
                                      IF_NONE
                                        { DIG 4 ;
                                          UNPAIR ;
                                          SWAP ;
                                          UNPAIR ;
                                          SWAP ;
                                          UNPAIR ;
                                          UNPAIR ;
                                          SWAP ;
                                          UNPAIR ;
                                          SWAP ;
                                          DUP ;
                                          DUP 8 ;
                                          CAR ;
                                          DUP ;
                                          DUG 2 ;
                                          GET ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          UNPAIR ;
                                          CDR ;
                                          NOW ;
                                          SOME ;
                                          PAIR ;
                                          PAIR ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          DUP ;
                                          DUP 8 ;
                                          CAR ;
                                          DUP ;
                                          DUG 2 ;
                                          GET ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          DUP ;
                                          GET 5 ;
                                          DUP 10 ;
                                          CDR ;
                                          ADD ;
                                          UPDATE 5 ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          SWAP ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          SWAP ;
                                          PAIR ;
                                          DUG 4 }
                                        { DROP ;
                                          NOW ;
                                          PUSH int 1209600 ;
                                          DUP 7 ;
                                          GET 5 ;
                                          GET 4 ;
                                          DUP 4 ;
                                          CAR ;
                                          GET ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          CAR ;
                                          CAR ;
                                          IF_NONE { UNIT ; FAILWITH } {} ;
                                          ADD ;
                                          COMPARE ;
                                          LT ;
                                          IF { DUP ;
                                               DUG 2 ;
                                               CAR ;
                                               CONTRACT unit ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               DUP 3 ;
                                               CDR ;
                                               UNIT ;
                                               TRANSFER_TOKENS ;
                                               CONS ;
                                               SWAP }
                                             { DIG 4 ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               UNPAIR ;
                                               SWAP ;
                                               UNPAIR ;
                                               SWAP ;
                                               DUP ;
                                               DUP 8 ;
                                               CAR ;
                                               DUP ;
                                               DUG 2 ;
                                               GET ;
                                               IF_NONE { UNIT ; FAILWITH } {} ;
                                               DUP ;
                                               GET 5 ;
                                               DUP 10 ;
                                               CDR ;
                                               ADD ;
                                               UPDATE 5 ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               SWAP ;
                                               PAIR ;
                                               DUG 4 } } } } }
                          { DIG 4 ;
                            UNPAIR ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            DUP 7 ;
                            CDR ;
                            ADD ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            DUG 4 } ;
                       DIG 2 ;
                       SWAP ;
                       CDR ;
                       ADD ;
                       SWAP } ;
                SWAP ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                DUP 3 ;
                CAR ;
                GET 3 ;
                GET 4 ;
                PUSH nat 1000000 ;
                DUP 5 ;
                GET 5 ;
                CAR ;
                PUSH string "EUR" ;
                VIEW "xtz_price_fiat" nat ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                PUSH mutez 1 ;
                AMOUNT ;
                EDIV ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                MUL ;
                EDIV ;
                IF_NONE { UNIT ; FAILWITH } { CAR } ;
                DUP 5 ;
                GET 5 ;
                GET 4 ;
                DUP 5 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 6 ;
                ADD ;
                COMPARE ;
                GT ;
                IF { DIG 2 ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUP 9 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     PUSH bool True ;
                     PUSH string "kyc_threshold_triggered" ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 }
                   {} ;
                DUP 3 ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DIG 8 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DUP ;
                GET 6 ;
                PUSH nat 1000000 ;
                DIG 11 ;
                GET 5 ;
                CAR ;
                PUSH string "EUR" ;
                VIEW "xtz_price_fiat" nat ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                PUSH mutez 1 ;
                AMOUNT ;
                EDIV ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                MUL ;
                EDIV ;
                IF_NONE { UNIT ; FAILWITH } { CAR } ;
                ADD ;
                UPDATE 6 ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR } } ;
        Elt 24
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } }
                          { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 3 ;
                GET 3 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                VIEW "kyc_check" (pair bool timestamp) ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                CAR ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF {}
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     DUP 8 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 8 ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                PUSH bool True ;
                PUSH string "kyc_check_ok" ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUP ;
                DUG 2 ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 8 ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CAR ;
                DIG 11 ;
                CAR ;
                GET 3 ;
                GET 3 ;
                DIG 11 ;
                VIEW "kyc_check" (pair bool timestamp) ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                CDR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 25
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {}
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "hard_banned" ;
                MEM ;
                IF { PUSH bool False }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "soft_banned" ;
                     MEM ;
                     NOT } ;
                IF { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "flagged" ;
                     MEM ;
                     NOT }
                   { PUSH bool False } ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                GET 5 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 4 ;
                SIZE ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                CAR ;
                PACK ;
                NIL bytes ;
                SWAP ;
                CONS ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                PACK ;
                CONS ;
                SENDER ;
                PACK ;
                CONS ;
                CONCAT ;
                SHA3 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 4 ;
                ITER { SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       COMPARE ;
                       GE ;
                       IF { NIL bytes ;
                            DIG 2 ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 }
                          { NIL bytes ;
                            SWAP ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 } } ;
                DUP 3 ;
                GET 3 ;
                CAR ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                DUP 3 ;
                GET 3 ;
                CAR ;
                CAR ;
                DUP 3 ;
                GET 3 ;
                MEM ;
                IF { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DUP 4 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     DUP 4 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     COMPARE ;
                     LT ;
                     IF {} { UNIT ; FAILWITH } ;
                     DUP 3 ;
                     GET 5 ;
                     GET 4 ;
                     DUP 4 ;
                     GET 3 ;
                     CAR ;
                     CAR ;
                     DUP 4 ;
                     GET 3 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CDR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     GET 3 ;
                     CDR ;
                     IF_NONE
                       { DROP }
                       { DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         DUP 4 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 5 ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         DUP 5 ;
                         GET 3 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 3 ;
                         CDR ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         COMPARE ;
                         EQ ;
                         IF { DUP 3 ;
                              SWAP ;
                              DROP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              SWAP ;
                              DUP ;
                              DIG 8 ;
                              GET 3 ;
                              CAR ;
                              CAR ;
                              DUP 9 ;
                              GET 3 ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              CDR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              UNPAIR ;
                              SWAP ;
                              UNPAIR ;
                              CAR ;
                              NONE string ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP }
                            { DROP } } }
                   { DROP } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SENDER ;
                DUP 7 ;
                CAR ;
                PAIR ;
                SOME ;
                DUP 7 ;
                GET 3 ;
                UPDATE ;
                PAIR ;
                PAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                SENDER ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                CAR ;
                DIG 10 ;
                GET 3 ;
                SOME ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 26
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {}
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "verified" ;
                MEM ;
                IF { UNIT ; FAILWITH } {} ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "hard_banned" ;
                MEM ;
                IF { PUSH bool False }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "soft_banned" ;
                     MEM ;
                     NOT } ;
                IF { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "flagged" ;
                     MEM ;
                     NOT }
                   { PUSH bool False } ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 10 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                SIZE ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SENDER ;
                PACK ;
                SHA3 ;
                SWAP ;
                ITER { SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       COMPARE ;
                       GE ;
                       IF { NIL bytes ;
                            DIG 2 ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 }
                          { NIL bytes ;
                            SWAP ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                SENDER ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                PUSH bool True ;
                PUSH string "verified" ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 28
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } } } ;
                DUP ;
                CAR ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF {}
                   { SWAP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SELF_ADDRESS ;
                     PAIR ;
                     PUSH (option string) (Some "moderate") ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     EXEC ;
                     IF {} { PUSH string "Not allowed" ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                MEM ;
                IF {}
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH (option
                             (pair (pair (option timestamp) (pair (set string) timestamp))
                                   (pair (pair (map string bytes) (option string)) (pair mutez nat))))
                          (Some { Pair None (Pair {} 0) ; Pair {} None ; 0 ; 0 }) ;
                     DUP 8 ;
                     CAR ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 8 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                CDR ;
                DIG 10 ;
                CDR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 29
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "hard_banned" ;
                MEM ;
                IF { PUSH bool False }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "soft_banned" ;
                     MEM ;
                     NOT } ;
                IF { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "flagged" ;
                     MEM ;
                     NOT }
                   { PUSH bool False } ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                CAR ;
                IF_NONE
                  {}
                  { DROP ;
                    NOW ;
                    PUSH int 1209600 ;
                    DUP 4 ;
                    GET 5 ;
                    GET 4 ;
                    SENDER ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    ADD ;
                    COMPARE ;
                    LT ;
                    IF { PUSH bool True }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         GET 4 ;
                         SENDER ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         GET 3 ;
                         PUSH string "verified" ;
                         MEM } ;
                    IF {} { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "kyc_check_ok" ;
                MEM ;
                IF { NOW ;
                     DUP 3 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 4 ;
                     COMPARE ;
                     GT }
                   { PUSH bool False } ;
                IF { PUSH bool True }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "kyc_threshold_triggered" ;
                     MEM ;
                     IF { PUSH bool False }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 5 ;
                          GET 3 ;
                          IF { SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 5 ;
                               GET 4 ;
                               SENDER ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               CAR ;
                               GET 3 ;
                               PUSH string "basic_kyc_check_ok" ;
                               MEM ;
                               NOT ;
                               NOT }
                             { PUSH bool True } } } ;
                IF {} { UNIT ; FAILWITH } ;
                PUSH nat 0 ;
                DUP 3 ;
                GET 3 ;
                GET 6 ;
                DUP 3 ;
                SENDER ;
                PAIR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                COMPARE ;
                GT ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                CAR ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                DUP 7 ;
                GET 3 ;
                GET 6 ;
                DUP 7 ;
                SENDER ;
                PAIR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DUP 7 ;
                CDR ;
                SENDER ;
                PAIR 3 ;
                CONS ;
                SELF_ADDRESS ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                DIG 2 ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                NONE nat ;
                DIG 8 ;
                SENDER ;
                PAIR ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR } } ;
        Elt 30
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT
                              { UNIT ; FAILWITH }
                              { IF_LEFT { UNIT ; FAILWITH } { DROP } } } } } ;
                DUP ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "hard_banned" ;
                MEM ;
                IF { PUSH bool False }
                   { DUP ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "soft_banned" ;
                     MEM ;
                     NOT } ;
                IF { DUP ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "flagged" ;
                     MEM ;
                     NOT }
                   { PUSH bool False } ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                CAR ;
                IF_NONE
                  {}
                  { DROP ;
                    NOW ;
                    PUSH int 1209600 ;
                    DUP 3 ;
                    GET 5 ;
                    GET 4 ;
                    SENDER ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    ADD ;
                    COMPARE ;
                    LT ;
                    IF { PUSH bool True }
                       { DUP ;
                         GET 5 ;
                         GET 4 ;
                         SENDER ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         GET 3 ;
                         PUSH string "verified" ;
                         MEM } ;
                    IF {} { UNIT ; FAILWITH } } ;
                DUP ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                GET 3 ;
                PUSH string "kyc_check_ok" ;
                MEM ;
                IF { NOW ;
                     DUP 2 ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 4 ;
                     COMPARE ;
                     GT }
                   { PUSH bool False } ;
                IF { PUSH bool True }
                   { DUP ;
                     GET 5 ;
                     GET 4 ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CAR ;
                     GET 3 ;
                     PUSH string "kyc_threshold_triggered" ;
                     MEM ;
                     IF { PUSH bool False }
                        { DUP ;
                          GET 5 ;
                          GET 3 ;
                          IF { DUP ;
                               GET 5 ;
                               GET 4 ;
                               SENDER ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               CAR ;
                               GET 3 ;
                               PUSH string "basic_kyc_check_ok" ;
                               MEM ;
                               NOT ;
                               NOT }
                             { PUSH bool True } } } ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                GET 5 ;
                GET 4 ;
                PUSH mutez 0 ;
                SWAP ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 5 ;
                COMPARE ;
                GT ;
                IF {} { UNIT ; FAILWITH } ;
                NIL operation ;
                SENDER ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DUP 3 ;
                GET 5 ;
                GET 4 ;
                SENDER ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 5 ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                SENDER ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                PUSH mutez 0 ;
                UPDATE 5 ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR } } })
' --burn-cap 10 --force > data/versum_identity_deploy.txt
versum_identity=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_identity_deploy.txt)
echo $versum_identity

echo "Deploying Versum Royalties"
tezos-client -E $TARGET_NODE originate contract versum_royalties_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_royalties.tz --init '(Pair (Pair (Pair (Pair { { PUSH bool False ;
                            SWAP ;
                            DUP ;
                            CAR ;
                            CAR ;
                            SWAP ;
                            DUP ;
                            DUG 3 ;
                            GET 4 ;
                            COMPARE ;
                            EQ ;
                            IF { DROP 2 ; PUSH bool True }
                               { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                 DUP 3 ;
                                 GET 4 ;
                                 COMPARE ;
                                 GT ;
                                 IF { SWAP ;
                                      DUP ;
                                      GET 4 ;
                                      SWAP ;
                                      DUP ;
                                      CAR ;
                                      CDR ;
                                      SWAP ;
                                      DUP ;
                                      GET 3 ;
                                      SWAP ;
                                      DUP ;
                                      DUG 5 ;
                                      CAR ;
                                      CAR ;
                                      PAIR 3 ;
                                      VIEW "is_admin_for" bool ;
                                      IF_NONE
                                        { SWAP ; DROP }
                                        { DROP 2 ;
                                          DUP ;
                                          GET 4 ;
                                          SWAP ;
                                          DUP ;
                                          CAR ;
                                          CDR ;
                                          SWAP ;
                                          DUP ;
                                          GET 3 ;
                                          SWAP ;
                                          CAR ;
                                          CAR ;
                                          PAIR 3 ;
                                          VIEW "is_admin_for" bool ;
                                          IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                    { SWAP ; DROP } } } }
                        "'$versum_administrator'")
                  (Pair 0 (Pair {} {})))
            (Pair (Pair "'$versum_identity'"
                        { Elt ""
                              0x697066733a2f2f516d65726b7739637763473138334b7a45585845567270636b73434c58394356736a7844767a596935394e776245 })
                  (Pair {} (Pair 0x050100000000 0x050100000000))))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "delegate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                PUSH mutez 0 ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SET_DELEGATE ;
                NIL operation ;
                SWAP ;
                CONS ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                CAR ;
                DIG 3 ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_royalties") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                ITER { DUP 3 ;
                       CAR ;
                       GET 5 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       MEM ;
                       IF {}
                          { DIG 2 ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            PUSH (option (pair nat bool)) (Some (Pair 0 True)) ;
                            DUP 7 ;
                            CAR ;
                            UPDATE ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            DUG 2 } ;
                       DIG 2 ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       DUP ;
                       DUP 7 ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       DIG 7 ;
                       CDR ;
                       UPDATE 2 ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_merkle_root") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                UPDATE 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 4 ;
                UPDATE 8 ;
                SWAP ;
                DUP ;
                CAR ;
                ITER { DUP 3 ;
                       CAR ;
                       GET 5 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       MEM ;
                       IF {}
                          { DIG 2 ;
                            UNPAIR ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            SWAP ;
                            UNPAIR ;
                            PUSH (option (pair nat bool)) (Some (Pair 0 True)) ;
                            DUP 7 ;
                            CAR ;
                            UPDATE ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            SWAP ;
                            PAIR ;
                            PAIR ;
                            DUG 2 } ;
                       DIG 2 ;
                       UNPAIR ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       SWAP ;
                       UNPAIR ;
                       DUP ;
                       DUP 7 ;
                       CAR ;
                       DUP ;
                       DUG 2 ;
                       GET ;
                       IF_NONE { UNIT ; FAILWITH } {} ;
                       DIG 7 ;
                       CDR ;
                       UPDATE 1 ;
                       SOME ;
                       SWAP ;
                       UPDATE ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       SWAP ;
                       PAIR ;
                       PAIR ;
                       SWAP } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_royalties") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 5 ;
                DIG 2 ;
                DUP ;
                GET 3 ;
                SWAP ;
                DUP ;
                CAR ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 5 ;
                CAR ;
                CAR ;
                PAIR 3 ;
                SOME ;
                DIG 3 ;
                GET 4 ;
                UPDATE ;
                UPDATE 5 ;
                NIL operation ;
                PAIR } } ;
        Elt 5
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 5 ;
                CAR ;
                SWAP ;
                SUB_MUTEZ ;
                ASSERT_SOME ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                CDR ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                DIG 2 ;
                CAR ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 7
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } ;
                NONE (pair address (pair nat (list (pair address nat)))) ;
                DUP 3 ;
                GET 5 ;
                NONE nat ;
                DUP 4 ;
                GET 6 ;
                CAR ;
                PAIR ;
                MEM ;
                IF { DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     NONE nat ;
                     DUP 3 ;
                     GET 6 ;
                     CAR ;
                     PAIR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     SOME }
                   { DUP 3 ;
                     GET 5 ;
                     DUP 3 ;
                     GET 6 ;
                     CDR ;
                     SOME ;
                     DUP 4 ;
                     GET 6 ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 6 ;
                          CDR ;
                          SOME ;
                          DUP 3 ;
                          GET 6 ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          SOME }
                        { DUP 3 ;
                          CAR ;
                          GET 5 ;
                          DUP 3 ;
                          GET 6 ;
                          CAR ;
                          MEM ;
                          IF { SWAP ;
                               DUP ;
                               DUG 2 ;
                               GET 6 ;
                               CDR ;
                               DUP 4 ;
                               CAR ;
                               GET 5 ;
                               DUP 4 ;
                               GET 6 ;
                               CAR ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               CAR ;
                               COMPARE ;
                               GE ;
                               IF { PUSH string "Contract has royalties yet not commited yet for token_id" ;
                                    FAILWITH }
                                  {} ;
                               DUP 3 ;
                               SWAP ;
                               DROP ;
                               CAR ;
                               GET 5 ;
                               DUP 2 ;
                               GET 6 ;
                               CAR ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               CDR ;
                               IF { PUSH string "Contract requires royalties" ; FAILWITH } {} }
                             { DROP } ;
                          NONE (pair address (pair nat (list (pair address nat)))) } } ;
                DUP ;
                IF_NONE
                  { DROP ;
                    NIL operation ;
                    DUP 3 ;
                    GET 3 ;
                    CAR ;
                    CONTRACT %batch_fwd_fa2
                      (pair (pair %fa2 address nat)
                            (pair (address %from_) (list %receivers (pair (address %address) (nat %amount))))) ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    PUSH mutez 0 ;
                    NIL (pair address nat) ;
                    DIG 4 ;
                    DUP ;
                    CAR ;
                    CAR ;
                    SWAP ;
                    DUP ;
                    DUG 6 ;
                    GET 5 ;
                    PAIR ;
                    CONS ;
                    SENDER ;
                    DIG 5 ;
                    GET 3 ;
                    PAIR 3 ;
                    TRANSFER_TOKENS ;
                    CONS }
                  { DROP ;
                    DUP ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 3 ;
                    DUP 3 ;
                    GET 5 ;
                    DUP 3 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF { DUP 3 ; CAR ; CAR ; PUSH nat 0 }
                       { PUSH nat 1000 ;
                         DUP 3 ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 3 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         MUL ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { UNIT ; FAILWITH } {} } ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    NIL (pair address nat) ;
                    DUP 6 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 4 ;
                    ITER { DUP ;
                           CDR ;
                           PUSH nat 1000 ;
                           SWAP ;
                           DUP 7 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           DIG 3 ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           DUG 2 ;
                           SWAP ;
                           PUSH nat 1000 ;
                           DUP 3 ;
                           CDR ;
                           DUP 7 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           DIG 2 ;
                           CAR ;
                           PAIR ;
                           CONS } ;
                    PUSH nat 0 ;
                    DUP 4 ;
                    COMPARE ;
                    GT ;
                    IF { PUSH bool True } { PUSH nat 0 ; DUP 3 ; COMPARE ; GT } ;
                    IF { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         DIG 2 ;
                         ADD ;
                         DUP 3 ;
                         GET 5 ;
                         PAIR ;
                         CONS }
                       { SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP ; SWAP ; DROP } ;
                    NIL operation ;
                    DUP 4 ;
                    GET 3 ;
                    CAR ;
                    CONTRACT %batch_fwd_fa2
                      (pair (pair (address %buyer) (pair %fa2 address nat))
                            (pair (address %from_) (list %receivers (pair (address %address) (nat %amount))))) ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    PUSH mutez 0 ;
                    DIG 3 ;
                    SENDER ;
                    PAIR ;
                    DIG 4 ;
                    DUP ;
                    GET 3 ;
                    SWAP ;
                    CAR ;
                    CDR ;
                    PAIR ;
                    PAIR ;
                    TRANSFER_TOKENS ;
                    CONS } ;
                PAIR } } ;
        Elt 8
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } ;
                NONE (pair address (pair nat (list (pair address nat)))) ;
                DUP 3 ;
                GET 5 ;
                NONE nat ;
                DUP 4 ;
                GET 4 ;
                CAR ;
                PAIR ;
                MEM ;
                IF { DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     NONE nat ;
                     DUP 3 ;
                     GET 4 ;
                     CAR ;
                     PAIR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     SOME }
                   { DUP 3 ;
                     GET 5 ;
                     DUP 3 ;
                     GET 4 ;
                     CDR ;
                     SOME ;
                     DUP 4 ;
                     GET 4 ;
                     CAR ;
                     PAIR ;
                     MEM ;
                     IF { DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 5 ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          GET 4 ;
                          CDR ;
                          SOME ;
                          DUP 3 ;
                          GET 4 ;
                          CAR ;
                          PAIR ;
                          GET ;
                          IF_NONE { UNIT ; FAILWITH } {} ;
                          SOME }
                        { DUP 3 ;
                          CAR ;
                          GET 5 ;
                          DUP 3 ;
                          GET 4 ;
                          CAR ;
                          MEM ;
                          IF { DUP 3 ;
                               SWAP ;
                               DROP ;
                               CAR ;
                               GET 5 ;
                               DUP 2 ;
                               GET 4 ;
                               CAR ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               CDR ;
                               IF { PUSH string "Contract has royalties yet not commited yet for token_id" ;
                                    FAILWITH }
                                  {} ;
                               DUP ;
                               GET 4 ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               GET 5 ;
                               DUP 3 ;
                               GET 4 ;
                               CAR ;
                               GET ;
                               IF_NONE { UNIT ; FAILWITH } {} ;
                               CAR ;
                               COMPARE ;
                               GE ;
                               IF { PUSH string "Contract has royalties yet not commited yet for token_id" ;
                                    FAILWITH }
                                  {} }
                             { DROP } ;
                          NONE (pair address (pair nat (list (pair address nat)))) } } ;
                DUP ;
                IF_NONE
                  { DROP ;
                    GET 3 ;
                    CONTRACT unit ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    NIL operation ;
                    SWAP ;
                    AMOUNT ;
                    UNIT ;
                    TRANSFER_TOKENS ;
                    CONS }
                  { DROP ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    GET 3 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF { PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         PUSH nat 0 }
                       { DUP ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 3 ;
                         PUSH nat 1000 ;
                         SWAP ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         MUL ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         EDIV ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { UNIT ; FAILWITH } {} } ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    NIL (pair address mutez) ;
                    DUP 5 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 4 ;
                    ITER { DUP ;
                           CDR ;
                           PUSH nat 1000 ;
                           SWAP ;
                           DUP 7 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           DIG 3 ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           DUG 2 ;
                           SWAP ;
                           PUSH mutez 1 ;
                           PUSH nat 1000 ;
                           DUP 4 ;
                           CDR ;
                           DUP 8 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { UNIT ; FAILWITH } {} ;
                           CAR ;
                           MUL ;
                           DIG 2 ;
                           CAR ;
                           PAIR ;
                           CONS } ;
                    PUSH nat 0 ;
                    DUP 3 ;
                    COMPARE ;
                    GT ;
                    IF { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 4 ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         PUSH mutez 1 ;
                         DIG 6 ;
                         MUL ;
                         ADD ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUG 3 }
                       { SWAP ; DROP ; DIG 2 ; DROP ; DIG 2 ; DROP } ;
                    PUSH nat 0 ;
                    DUP 3 ;
                    COMPARE ;
                    GT ;
                    IF { PUSH mutez 1 ; DIG 2 ; MUL ; DUP 3 ; GET 3 ; PAIR ; CONS }
                       { SWAP ; DROP } ;
                    NIL operation ;
                    DUP 4 ;
                    GET 3 ;
                    CAR ;
                    CONTRACT %batch_fwd_xtz
                      (pair (address %buyer) (list %receivers (pair (address %address) (mutez %amount)))) ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    AMOUNT ;
                    DIG 3 ;
                    DIG 4 ;
                    CAR ;
                    PAIR ;
                    TRANSFER_TOKENS ;
                    CONS } ;
                PAIR } } ;
        Elt 9
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } } ;
                DUP ;
                GET 5 ;
                PACK ;
                NIL bytes ;
                SWAP ;
                CONS ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                PACK ;
                CONS ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                PACK ;
                CONS ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 6 ;
                PACK ;
                CONS ;
                CONCAT ;
                SHA3 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CDR ;
                ITER { SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       COMPARE ;
                       GE ;
                       IF { NIL bytes ;
                            DIG 2 ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 }
                          { NIL bytes ;
                            SWAP ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 } } ;
                DUP 3 ;
                GET 7 ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 5 ;
                DIG 2 ;
                DUP ;
                GET 5 ;
                SWAP ;
                DUP ;
                GET 3 ;
                SWAP ;
                DUP ;
                DUG 5 ;
                CAR ;
                CAR ;
                PAIR 3 ;
                SOME ;
                DIG 3 ;
                GET 6 ;
                UPDATE ;
                UPDATE 5 ;
                NIL operation ;
                PAIR } } })' --burn-cap 10 --force > data/versum_royalties_deploy.txt
versum_royalties=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_royalties_deploy.txt)
echo $versum_royalties

echo "Deploying Versum contract registry"
tezos-client -E $TARGET_NODE originate contract versum_registry_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_registry.tz --init '(Pair (Pair (Pair (Pair (Pair { { PUSH bool False ;
                                  SWAP ;
                                  DUP ;
                                  CAR ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 3 ;
                                  GET 4 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP 2 ; PUSH bool True }
                                     { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                       DUP 3 ;
                                       GET 4 ;
                                       COMPARE ;
                                       GT ;
                                       IF { SWAP ;
                                            DUP ;
                                            GET 4 ;
                                            SWAP ;
                                            DUP ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            CAR ;
                                            PAIR 3 ;
                                            VIEW "is_admin_for" bool ;
                                            IF_NONE
                                              { SWAP ; DROP }
                                              { DROP 2 ;
                                                DUP ;
                                                GET 4 ;
                                                SWAP ;
                                                DUP ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                GET 3 ;
                                                SWAP ;
                                                CAR ;
                                                CAR ;
                                                PAIR 3 ;
                                                VIEW "is_admin_for" bool ;
                                                IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                          { SWAP ; DROP } } } }
                              "'$versum_administrator'")
                        (Pair 0 {}))
                  (Pair (Pair 0 {})
                        (Pair "tz1burnburnburnburnburnburnburjAYjjX" "tz1burnburnburnburnburnburnburjAYjjX")))
            (Pair (Pair (Pair "tz1burnburnburnburnburnburnburjAYjjX" 3)
                        (Pair { Elt ""
                                    0x697066733a2f2f516d575a506d3359664d483974776773786567575a475a70595a32576f724d374e74383439545a72345a4479456d }
                              {}))
                  (Pair (Pair {} "'$ADMIN_ADDRESS'") (Pair {} {}))))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "delegate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                PUSH mutez 0 ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SET_DELEGATE ;
                NIL operation ;
                SWAP ;
                CONS ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                CAR ;
                DIG 4 ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 4 ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CAR ;
                DIG 4 ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                CDR ;
                DIG 4 ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 5
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                CAR ;
                DIG 4 ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 6
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                CAR ;
                DIG 4 ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 7
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 6 ;
                CAR ;
                SWAP ;
                SUB_MUTEZ ;
                ASSERT_SOME ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                CDR ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                DIG 2 ;
                CAR ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 8
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "add_currency") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUP 7 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH bool True ;
                     UPDATE 12 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DUP ;
                     DIG 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH bool True ;
                     UPDATE 5 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH bool False ;
                     PUSH address 0x0000b28066369a8ed09ba9d3d47f19598440266013f0 ;
                     PUSH bool False ;
                     DUP ;
                     DUP ;
                     DUP ;
                     DUP ;
                     PAIR 7 ;
                     SOME ;
                     DIG 6 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR } ;
                NIL operation ;
                PAIR } } ;
        Elt 9
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "add_fa2") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DIG 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH bool True ;
                     UPDATE 5 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH bool False ;
                     PUSH address 0x0000b28066369a8ed09ba9d3d47f19598440266013f0 ;
                     PUSH bool False ;
                     DUP ;
                     DUP ;
                     DUP ;
                     DUP ;
                     PAIR 7 ;
                     SOME ;
                     DIG 6 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR } ;
                NIL operation ;
                PAIR } } ;
        Elt 10
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "add_market") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DIG 6 ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH bool True ;
                     UPDATE 7 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR }
                   { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     PUSH bool False ;
                     PUSH address 0x0000b28066369a8ed09ba9d3d47f19598440266013f0 ;
                     PUSH bool False ;
                     DUP ;
                     DUP ;
                     DUP ;
                     DUP ;
                     PAIR 7 ;
                     SOME ;
                     DIG 6 ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR } ;
                NIL operation ;
                PAIR } } ;
        Elt 11
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 8 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SENDER ;
                DUP 3 ;
                GET 8 ;
                DUP 3 ;
                CDR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                DUP ;
                CAR ;
                PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                COMPARE ;
                LT ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 7 ;
                PUSH (option unit) (Some Unit) ;
                DIG 3 ;
                UPDATE ;
                UPDATE 7 ;
                NIL operation ;
                PAIR } } ;
        Elt 12
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } } ;
                DUP ;
                PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                COMPARE ;
                LT ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                PUSH (option unit) (Some Unit) ;
                SENDER ;
                DIG 7 ;
                PAIR ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 13
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                DUP ;
                GET 8 ;
                DIG 2 ;
                SENDER ;
                PAIR ;
                SOME ;
                DIG 3 ;
                CAR ;
                GET 3 ;
                CAR ;
                UPDATE ;
                UPDATE 8 ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                PUSH nat 1 ;
                ADD ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 15
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "register_contract") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP 6 ;
                CDR ;
                SOME ;
                DIG 6 ;
                CAR ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 16
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                      { UNIT ; FAILWITH } } ;
                SENDER ;
                DUP 3 ;
                GET 8 ;
                DUP 3 ;
                CDR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 7 ;
                NONE unit ;
                DIG 3 ;
                UPDATE ;
                UPDATE 7 ;
                NIL operation ;
                PAIR } } ;
        Elt 17
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                NONE unit ;
                SENDER ;
                DIG 7 ;
                PAIR ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 18
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_royalty_adapter") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 7 ;
                CDR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DIG 7 ;
                CAR ;
                UPDATE 11 ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 19
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                          { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_tokens_may_be_infused") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP ;
                DUP 7 ;
                CDR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DIG 7 ;
                CAR ;
                UPDATE 11 ;
                SOME ;
                SWAP ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 20
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                          { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 8 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SENDER ;
                DUP 3 ;
                GET 8 ;
                DUP 3 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 8 ;
                DUP ;
                DUP 4 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DIG 4 ;
                CDR ;
                UPDATE 1 ;
                SOME ;
                SWAP ;
                UPDATE ;
                UPDATE 8 ;
                NIL operation ;
                PAIR } } ;
        Elt 21
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 8 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SENDER ;
                DUP 3 ;
                GET 8 ;
                DUP 3 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 8 ;
                DUP ;
                DUP 4 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DIG 4 ;
                CDR ;
                UPDATE 2 ;
                SOME ;
                SWAP ;
                UPDATE ;
                UPDATE 8 ;
                NIL operation ;
                PAIR } } ;
        Elt 22
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 8 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                MEM ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                CAR ;
                SENDER ;
                MEM ;
                IF { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     CAR ;
                     CDR ;
                     NIL nat ;
                     DUP 4 ;
                     GET 5 ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     ITER { CONS } ;
                     NIL nat ;
                     SWAP ;
                     ITER { CONS } ;
                     SIZE ;
                     COMPARE ;
                     LT ;
                     IF {} { UNIT ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 5 ;
                     CAR ;
                     SENDER ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF { UNIT ; FAILWITH } {} ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH bool True ;
                     DIG 8 ;
                     UPDATE ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     EMPTY_SET nat ;
                     PUSH bool True ;
                     DIG 7 ;
                     UPDATE ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR } ;
                NIL operation ;
                PAIR } } ;
        Elt 23
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } } } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                DUP ;
                SENDER ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                PUSH bool False ;
                DIG 8 ;
                UPDATE ;
                SOME ;
                SWAP ;
                UPDATE ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } })' --burn-cap 10 --force > data/versum_registry_deploy.txt
versum_registry=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_registry_deploy.txt)
echo $versum_registry

echo "Deploying Versum Materia"
tezos-client -E $TARGET_NODE originate contract versum_materia_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_materia.tz --init '(Pair (Pair (Pair (Pair (Pair { { PUSH bool False ;
                                  SWAP ;
                                  DUP ;
                                  CAR ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 3 ;
                                  GET 4 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP 2 ; PUSH bool True }
                                     { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                       DUP 3 ;
                                       GET 4 ;
                                       COMPARE ;
                                       GT ;
                                       IF { SWAP ;
                                            DUP ;
                                            GET 4 ;
                                            SWAP ;
                                            DUP ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            CAR ;
                                            PAIR 3 ;
                                            VIEW "is_admin_for" bool ;
                                            IF_NONE
                                              { SWAP ; DROP }
                                              { DROP 2 ;
                                                DUP ;
                                                GET 4 ;
                                                SWAP ;
                                                DUP ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                GET 3 ;
                                                SWAP ;
                                                CAR ;
                                                CAR ;
                                                PAIR 3 ;
                                                VIEW "is_admin_for" bool ;
                                                IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                          { SWAP ; DROP } } } }
                              "'$versum_administrator'")
                        (Pair 0 0))
                  (Pair (Pair 0x050100000000 0x050100000000)
                        (Pair {} (Pair "'$versum_registry'" False))))
            (Pair (Pair (Pair {} False)
                        (Pair "'$versum_identity'"
                              (Pair {}
                                    { Elt ""
                                          0x697066733a2f2f516d5166366656313656647636744e373373675547446f7071797534757841684458786447754e54706b77355369 })))
                  (Pair (Pair {} False) (Pair {} (Pair {} {})))))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT {} { PUSH int -1 ; FAILWITH } }
                      { PUSH int -1 ; FAILWITH } }
                  { PUSH int -1 ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                NONE string ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF { PUSH bool True }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 7 ;
                     SENDER ;
                     VIEW "may_charge_materia" bool ;
                     IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} } ;
                IF {} { PUSH int 2407 ; FAILWITH } ;
                NIL operation ;
                SELF_ADDRESS ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                DUP 6 ;
                CDR ;
                PUSH nat 0 ;
                PUSH address 0x0000b28066369a8ed09ba9d3d47f19598440266013f0 ;
                PAIR 3 ;
                CONS ;
                DIG 5 ;
                CAR ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT { DROP } { PUSH int -1 ; FAILWITH } } }
                      { PUSH int -1 ; FAILWITH } }
                  { PUSH int -1 ; FAILWITH } ;
                DUP ;
                GET 3 ;
                CAR ;
                CDR ;
                IF { PUSH int 2325 ; FAILWITH } {} ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "genesis") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 2326 ; FAILWITH } ;
                NIL operation ;
                SELF_ADDRESS ;
                CONTRACT %mint
                  (pair (pair (address %address) (nat %amount))
                        (pair (map %metadata string bytes) (nat %token_id))) ;
                IF_NONE { PUSH int 2330 ; FAILWITH } {} ;
                PUSH mutez 0 ;
                PUSH (pair (map string bytes) nat)
                     (Pair { Elt ""
                                 0x697066733a2f2f516d6172436734454c4e70396255614241314d37506f6378377745777150536a6a5256477267316132486839444e }
                           0) ;
                PUSH nat 0 ;
                SELF_ADDRESS ;
                PAIR ;
                PAIR ;
                TRANSFER_TOKENS ;
                CONS ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                CAR ;
                PUSH bool True ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT { PUSH int -1 ; FAILWITH } {} } }
                      { PUSH int -1 ; FAILWITH } }
                  { PUSH int -1 ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_merkle_root") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 2415 ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 3 ;
                DUP ;
                GET 3 ;
                SWAP ;
                DUP ;
                DUG 5 ;
                CAR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CAR ;
                DIG 4 ;
                GET 4 ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT {} { PUSH int -1 ; FAILWITH } }
                          { PUSH int -1 ; FAILWITH } } }
                  { PUSH int -1 ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 575 ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 5 ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { PUSH int -1 ; FAILWITH } {} }
                          { PUSH int -1 ; FAILWITH } } }
                  { PUSH int -1 ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 560 ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CAR ;
                DIG 5 ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 5
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT {} { PUSH int -1 ; FAILWITH } } } }
                  { PUSH int -1 ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_code") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 581 ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 4 ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 6
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT { PUSH int -1 ; FAILWITH } {} } } }
                  { PUSH int -1 ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_token") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 552 ; FAILWITH } ;
                DUP ;
                CAR ;
                DUP 3 ;
                GET 7 ;
                DUP 3 ;
                CDR ;
                GET ;
                IF_NONE { PUSH int 553 ; FAILWITH } {} ;
                GET 4 ;
                COMPARE ;
                EQ ;
                IF {} { PUSH int 553 ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                GET ;
                IF_NONE { PUSH int 554 ; FAILWITH } {} ;
                CAR ;
                IF { PUSH int 554 ; FAILWITH } {} ;
                SWAP ;
                DUP ;
                GET 7 ;
                DUP ;
                DIG 3 ;
                CDR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { PUSH int 555 ; FAILWITH } {} ;
                PUSH bool True ;
                UPDATE 1 ;
                SOME ;
                SWAP ;
                UPDATE ;
                UPDATE 7 ;
                NIL operation ;
                PAIR } } ;
        Elt 7
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { IF_LEFT {} { PUSH int -1 ; FAILWITH } }
                          { PUSH int -1 ; FAILWITH } }
                      { PUSH int -1 ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                GET 3 ;
                NIL address ;
                SENDER ;
                CONS ;
                VIEW "none_banned_or_flagged" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF {} { PUSH string "Banned" ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 5 ;
                SENDER ;
                MEM ;
                IF {}
                   { SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     PUSH (option nat) (Some 0) ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP } ;
                DUP ;
                CAR ;
                PACK ;
                SENDER ;
                PACK ;
                CONCAT ;
                SHA3 ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 4 ;
                DUP 3 ;
                CDR ;
                SIZE ;
                COMPARE ;
                EQ ;
                IF {} { PUSH int 2429 ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CDR ;
                ITER { SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       COMPARE ;
                       GE ;
                       IF { NIL bytes ;
                            DIG 2 ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 }
                          { NIL bytes ;
                            SWAP ;
                            CONS ;
                            SWAP ;
                            CONS ;
                            PUSH bytes 0x01 ;
                            CONS ;
                            CONCAT ;
                            SHA3 } } ;
                DUP 3 ;
                CAR ;
                GET 3 ;
                CAR ;
                COMPARE ;
                EQ ;
                IF {} { PUSH int 2435 ; FAILWITH } ;
                PUSH nat 0 ;
                DUP 3 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 3 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                COMPARE ;
                GT ;
                IF {} { PUSH int 2438 ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP ;
                SELF_ADDRESS ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { PUSH int 2375 ; FAILWITH } {} ;
                PUSH nat 5 ;
                DUP 11 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 11 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                EDIV ;
                IF_NONE { PUSH int 2373 ; FAILWITH } { CAR } ;
                DIG 10 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 11 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                ADD ;
                ADD ;
                SOME ;
                SWAP ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                DUP ;
                DUG 2 ;
                DUP ;
                GET 10 ;
                DUP ;
                PUSH nat 0 ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { PUSH int 2376 ; FAILWITH } {} ;
                PUSH nat 5 ;
                DUP 7 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 7 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                EDIV ;
                IF_NONE { PUSH int 2373 ; FAILWITH } { CAR } ;
                DIG 6 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 7 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                ADD ;
                ADD ;
                SOME ;
                SWAP ;
                UPDATE ;
                UPDATE 10 ;
                SWAP ;
                NIL operation ;
                SELF_ADDRESS ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                PUSH nat 5 ;
                DUP 8 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 8 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                EDIV ;
                IF_NONE { PUSH int 2373 ; FAILWITH } { CAR } ;
                PUSH nat 0 ;
                DUP 9 ;
                CAR ;
                GET 7 ;
                UNIT ;
                VIEW "treasury" address ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                PAIR 3 ;
                CONS ;
                DUP 7 ;
                CAR ;
                GET 5 ;
                SENDER ;
                GET ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                DUP 7 ;
                CAR ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH int 2437 ; FAILWITH } {} ;
                PUSH nat 0 ;
                SENDER ;
                PAIR 3 ;
                CONS ;
                SELF_ADDRESS ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                DIG 2 ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DIG 6 ;
                CAR ;
                SOME ;
                SENDER ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR } } ;
        Elt 9
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT {} { PUSH int -1 ; FAILWITH } } }
                      { PUSH int -1 ; FAILWITH } } ;
                SELF_ADDRESS ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF {} { PUSH int 2344 ; FAILWITH } ;
                DUP ;
                GET 4 ;
                PUSH nat 0 ;
                COMPARE ;
                EQ ;
                IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
                DUP ;
                GET 4 ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                COMPARE ;
                EQ ;
                IF {} { PUSH string "Token-IDs should be consecutive" ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                PUSH nat 1 ;
                DUP 7 ;
                GET 4 ;
                ADD ;
                SWAP ;
                DUP ;
                DUP 3 ;
                COMPARE ;
                LE ;
                IF { SWAP ; DROP } { DROP } ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                GET 5 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                MEM ;
                IF { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 2357 ; FAILWITH } {} ;
                     DUP 9 ;
                     CAR ;
                     CDR ;
                     ADD ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP }
                   { SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP 7 ;
                     CAR ;
                     CDR ;
                     SOME ;
                     DUP 8 ;
                     CAR ;
                     CAR ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 9 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 4 ;
                MEM ;
                IF { DROP }
                   { SWAP ;
                     DUP ;
                     GET 9 ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     GET 4 ;
                     PAIR ;
                     SOME ;
                     DUP 4 ;
                     GET 4 ;
                     UPDATE ;
                     UPDATE 9 ;
                     DUP ;
                     GET 10 ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     SOME ;
                     DUP 4 ;
                     GET 4 ;
                     UPDATE ;
                     UPDATE 10 ;
                     DUP ;
                     GET 7 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     EMPTY_MAP string bytes ;
                     PUSH bool False ;
                     PAIR 3 ;
                     SOME ;
                     DIG 3 ;
                     GET 4 ;
                     UPDATE ;
                     UPDATE 7 } ;
                NIL operation ;
                PAIR } } ;
        Elt 10
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT { PUSH int -1 ; FAILWITH } {} } }
                      { PUSH int -1 ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                CDR ;
                IF { PUSH string "FA2_PAUSED" ; FAILWITH } {} ;
                EMPTY_SET address ;
                PUSH bool True ;
                SENDER ;
                UPDATE ;
                PUSH bool True ;
                SOURCE ;
                UPDATE ;
                SWAP ;
                DUP ;
                DUG 2 ;
                ITER { SWAP ;
                       PUSH bool True ;
                       DUP 3 ;
                       CAR ;
                       UPDATE ;
                       SWAP ;
                       DUP ;
                       CDR ;
                       ITER { DUP ;
                              GET 3 ;
                              PUSH nat 0 ;
                              COMPARE ;
                              EQ ;
                              IF {} { PUSH string "single-asset: token-id <> 0" ; FAILWITH } ;
                              DUP 5 ;
                              GET 3 ;
                              GET 5 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              MEM ;
                              IF {}
                                 { DIG 4 ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   PUSH (option nat) (Some 0) ;
                                   DUP 8 ;
                                   CAR ;
                                   UPDATE ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   DUG 4 } ;
                              PUSH bool True ;
                              DIG 3 ;
                              PUSH bool True ;
                              DUP 4 ;
                              CAR ;
                              UPDATE ;
                              DUG 3 ;
                              DUP ;
                              IF { PUSH bool True }
                                 { DUP 6 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DUP 3 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH bool True }
                                      { DUP 6 ; CAR ; CAR ; CAR ; CDR ; DUP 4 ; CAR ; COMPARE ; EQ } } ;
                              IF { PUSH bool True } { SELF_ADDRESS ; DUP 3 ; CAR ; COMPARE ; EQ } ;
                              IF {} { PUSH string "Invalid receiver" ; FAILWITH } ;
                              DIG 5 ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              SELF_ADDRESS ;
                              PAIR ;
                              PUSH (option string) (Some "intervene") ;
                              SENDER ;
                              PAIR ;
                              PAIR ;
                              EXEC ;
                              IF { PUSH bool True } { SENDER ; DUP 4 ; CAR ; COMPARE ; EQ } ;
                              IF { PUSH bool True }
                                 { DUP 6 ;
                                   GET 5 ;
                                   CAR ;
                                   DUP 3 ;
                                   GET 3 ;
                                   SENDER ;
                                   DUP 6 ;
                                   CAR ;
                                   PAIR 3 ;
                                   MEM } ;
                              IF { PUSH bool True } { SELF_ADDRESS ; SENDER ; COMPARE ; EQ } ;
                              IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                              DUP 6 ;
                              GET 9 ;
                              DUP 3 ;
                              GET 3 ;
                              MEM ;
                              IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                              PUSH nat 0 ;
                              DUP 3 ;
                              GET 4 ;
                              COMPARE ;
                              GT ;
                              IF { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 4 ;
                                   DUP 7 ;
                                   GET 3 ;
                                   GET 5 ;
                                   DUP 5 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 2493 ; FAILWITH } {} ;
                                   COMPARE ;
                                   GE ;
                                   IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                   DUP 6 ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   SWAP ;
                                   UNPAIR ;
                                   DUP ;
                                   DUP 10 ;
                                   CAR ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { PUSH int 2496 ; FAILWITH } { DROP } ;
                                   DUP 9 ;
                                   GET 4 ;
                                   DIG 13 ;
                                   GET 3 ;
                                   GET 5 ;
                                   DUP 12 ;
                                   CAR ;
                                   GET ;
                                   IF_NONE { PUSH int 2497 ; FAILWITH } {} ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { PUSH int 2496 ; FAILWITH } {} ;
                                   SOME ;
                                   SWAP ;
                                   UPDATE ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   DUP ;
                                   DUG 6 ;
                                   GET 3 ;
                                   GET 5 ;
                                   DUP 3 ;
                                   CAR ;
                                   MEM ;
                                   IF { DIG 5 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DUP ;
                                        DUP 9 ;
                                        CAR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 2499 ; FAILWITH } {} ;
                                        DUP 10 ;
                                        GET 4 ;
                                        ADD ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DUG 5 }
                                      { DIG 5 ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DUP 8 ;
                                        GET 4 ;
                                        SOME ;
                                        DUP 9 ;
                                        CAR ;
                                        UPDATE ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DUG 5 } ;
                                   PUSH address 0x0000b28066369a8ed09ba9d3d47f19598440266013f0 ;
                                   DUP 3 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { DUP 6 ;
                                        SWAP ;
                                        DROP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        SWAP ;
                                        UNPAIR ;
                                        DUP ;
                                        DUP 8 ;
                                        CAR ;
                                        DUP ;
                                        DUG 2 ;
                                        GET ;
                                        IF_NONE { PUSH int 2504 ; FAILWITH } { DROP } ;
                                        DUP 8 ;
                                        GET 4 ;
                                        DIG 12 ;
                                        GET 3 ;
                                        GET 5 ;
                                        DUP 10 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 2504 ; FAILWITH } {} ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 2504 ; FAILWITH } {} ;
                                        SOME ;
                                        SWAP ;
                                        UPDATE ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DUP ;
                                        DUG 5 ;
                                        DUP ;
                                        GET 10 ;
                                        DUP 3 ;
                                        GET 4 ;
                                        DIG 7 ;
                                        GET 10 ;
                                        DUP 5 ;
                                        GET 3 ;
                                        GET ;
                                        IF_NONE { PUSH int 2503 ; FAILWITH } {} ;
                                        SUB ;
                                        ISNAT ;
                                        IF_NONE { PUSH int 2505 ; FAILWITH } {} ;
                                        SOME ;
                                        DIG 3 ;
                                        GET 3 ;
                                        UPDATE ;
                                        UPDATE 10 ;
                                        DUG 3 }
                                      { DROP 2 } }
                                 { DROP 2 } } ;
                       DROP } ;
                SWAP ;
                DROP ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                GET 3 ;
                NIL address ;
                DIG 2 ;
                ITER { CONS } ;
                NIL address ;
                SWAP ;
                ITER { CONS } ;
                VIEW "none_banned" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF {} { PUSH int 2509 ; FAILWITH } ;
                NIL operation ;
                PAIR } } ;
        Elt 11
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT {} { PUSH int -1 ; FAILWITH } }
                          { PUSH int -1 ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_extra_db") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 614 ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                DUP 6 ;
                CDR ;
                SOME ;
                DIG 6 ;
                CAR ;
                UPDATE ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 12
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { IF_LEFT { PUSH int -1 ; FAILWITH } {} }
                          { PUSH int -1 ; FAILWITH } } } ;
                DUP ;
                ITER { IF_LEFT
                         { DUP ;
                           CAR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { PUSH bool True }
                              { DIG 2 ;
                                DUP ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                SELF_ADDRESS ;
                                PAIR ;
                                NONE string ;
                                SENDER ;
                                PAIR ;
                                PAIR ;
                                EXEC } ;
                           IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                           DIG 2 ;
                           UNPAIR ;
                           SWAP ;
                           UNPAIR ;
                           SWAP ;
                           UNPAIR ;
                           UNPAIR ;
                           PUSH (option unit) (Some Unit) ;
                           DIG 6 ;
                           DUP ;
                           GET 4 ;
                           SWAP ;
                           DUP ;
                           GET 3 ;
                           SWAP ;
                           CAR ;
                           PAIR 3 ;
                           UPDATE ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP }
                         { DUP ;
                           CAR ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { PUSH bool True }
                              { DIG 2 ;
                                DUP ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CAR ;
                                SWAP ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                CDR ;
                                SELF_ADDRESS ;
                                PAIR ;
                                NONE string ;
                                SENDER ;
                                PAIR ;
                                PAIR ;
                                EXEC } ;
                           IF {} { PUSH string "FA2_NOT_ADMIN_OR_OPERATOR" ; FAILWITH } ;
                           DIG 2 ;
                           UNPAIR ;
                           SWAP ;
                           UNPAIR ;
                           SWAP ;
                           UNPAIR ;
                           UNPAIR ;
                           NONE unit ;
                           DIG 6 ;
                           DUP ;
                           GET 4 ;
                           SWAP ;
                           DUP ;
                           GET 3 ;
                           SWAP ;
                           CAR ;
                           PAIR 3 ;
                           UPDATE ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP ;
                           PAIR ;
                           SWAP } } ;
                DROP ;
                NIL operation ;
                PAIR } } ;
        Elt 13
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT {} { PUSH int -1 ; FAILWITH } } } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "update_token") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { PUSH int 566 ; FAILWITH } ;
                SWAP ;
                DUP ;
                GET 9 ;
                DIG 2 ;
                DUP ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 4 ;
                CDR ;
                PAIR ;
                SOME ;
                DIG 3 ;
                CDR ;
                UPDATE ;
                UPDATE 9 ;
                NIL operation ;
                PAIR } } ;
        Elt 14
            { { UNPAIR ;
                IF_LEFT
                  { PUSH int -1 ; FAILWITH }
                  { IF_LEFT
                      { PUSH int -1 ; FAILWITH }
                      { IF_LEFT
                          { PUSH int -1 ; FAILWITH }
                          { IF_LEFT { PUSH int -1 ; FAILWITH } {} } } } ;
                DUP ;
                CDR ;
                DUP 3 ;
                GET 3 ;
                GET 5 ;
                DIG 2 ;
                CAR ;
                GET ;
                IF_NONE { PUSH int 2320 ; FAILWITH } {} ;
                COMPARE ;
                GE ;
                IF {} { PUSH int 2321 ; FAILWITH } ;
                NIL operation ;
                PAIR } } })' --burn-cap 10 --force > data/versum_materia_deploy.txt
versum_materia=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_materia_deploy.txt)
echo $versum_materia

echo "Deploying Versum market"
tezos-client -E $TARGET_NODE originate contract versum_market_$NETWORK transferring 0 from $ORIGINATOR_ALIAS running contracts/versum_market.tz --init '(Pair (Pair (Pair (Pair (Pair { { PUSH bool False ;
                                  SWAP ;
                                  DUP ;
                                  CAR ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 3 ;
                                  GET 4 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP 2 ; PUSH bool True }
                                     { PUSH address 0x0002ffffffffffffffffffffffffffffffffffffffff ;
                                       DUP 3 ;
                                       GET 4 ;
                                       COMPARE ;
                                       GT ;
                                       IF { SWAP ;
                                            DUP ;
                                            GET 4 ;
                                            SWAP ;
                                            DUP ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            DUP ;
                                            GET 3 ;
                                            SWAP ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            CAR ;
                                            PAIR 3 ;
                                            VIEW "is_admin_for" bool ;
                                            IF_NONE
                                              { SWAP ; DROP }
                                              { DROP 2 ;
                                                DUP ;
                                                GET 4 ;
                                                SWAP ;
                                                DUP ;
                                                CAR ;
                                                CDR ;
                                                SWAP ;
                                                DUP ;
                                                GET 3 ;
                                                SWAP ;
                                                CAR ;
                                                CAR ;
                                                PAIR 3 ;
                                                VIEW "is_admin_for" bool ;
                                                IF_NONE { PUSH string "invalid_view" ; FAILWITH } {} } }
                                          { SWAP ; DROP } } } }
                              (Pair "'$versum_administrator'" 0))
                        (Pair {} (Pair {} 0)))
                  (Pair (Pair "'$versum_registry'" (Pair 15 13))
                        (Pair 12 (Pair False {}))))
            (Pair (Pair (Pair {} (Pair {} "'$versum_identity'"))
                        (Pair (Pair 0 "tz1burnburnburnburnburnburnburjAYjjX")
                              (Pair 45
                                    { Elt ""
                                          0x697066733a2f2f516d634d566b37465054566f487550533332434e715331594e767a7666763253417a35317664695766367a434e4c })))
                  (Pair (Pair 15 (Pair 0 {}))
                        (Pair (Pair False "'$versum_royalties'") (Pair 0 {})))))
      { Elt 0
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "delegate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                PUSH mutez 0 ;
                AMOUNT ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SET_DELEGATE ;
                NIL operation ;
                SWAP ;
                CONS ;
                PAIR } } ;
        Elt 1
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT
                          { UNIT ; FAILWITH }
                          { IF_LEFT { DROP } { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "deprecate") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                CDR ;
                PUSH bool True ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 2
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                      { UNIT ; FAILWITH } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_administrator") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                CDR ;
                DIG 5 ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 3
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_fee") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                DUP 6 ;
                CDR ;
                SOME ;
                DIG 6 ;
                CAR ;
                UPDATE ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 4
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_paused") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                CDR ;
                DIG 5 ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 5
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "set_fee") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 7 ;
                CAR ;
                SOME ;
                DIG 7 ;
                CDR ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                NIL operation ;
                PAIR } } ;
        Elt 6
            { { UNPAIR ;
                IF_LEFT
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } }
                  { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP 7 ;
                CAR ;
                DIG 8 ;
                CAR ;
                CAR ;
                GET 5 ;
                DUP 9 ;
                GET 3 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                SUB ;
                ISNAT ;
                IF_NONE { PUSH string "Too much!" ; FAILWITH } {} ;
                SOME ;
                DUP 8 ;
                GET 3 ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                GET 3 ;
                CAR ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                DIG 5 ;
                DUP ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 7 ;
                GET 3 ;
                CDR ;
                DIG 7 ;
                GET 4 ;
                PAIR 3 ;
                CONS ;
                SELF_ADDRESS ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 7
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 3 ;
                CAR ;
                CAR ;
                CAR ;
                GET 3 ;
                SELF_ADDRESS ;
                PAIR ;
                PUSH (option string) (Some "withdraw_funds") ;
                SENDER ;
                PAIR ;
                PAIR ;
                EXEC ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                DUP 7 ;
                CAR ;
                SWAP ;
                SUB_MUTEZ ;
                ASSERT_SOME ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                SWAP ;
                DUP ;
                CDR ;
                CONTRACT unit ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                DIG 2 ;
                CAR ;
                UNIT ;
                TRANSFER_TOKENS ;
                CONS ;
                PAIR } } ;
        Elt 8
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT {} { UNIT ; FAILWITH } } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                CAR ;
                IF { UNIT ; FAILWITH } {} ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                CAR ;
                GET 4 ;
                SENDER ;
                VIEW "may_trade" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF {} { PUSH string "Banned" ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                CAR ;
                GET 3 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 13 ;
                IF_NONE
                  { PUSH mutez 1 ; AMOUNT ; EDIV ; IF_NONE { UNIT ; FAILWITH } {} ; CAR }
                  { DROP ; DUP ; CDR } ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 3 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 14 ;
                IF { DUP 3 ;
                     GET 3 ;
                     CAR ;
                     GET 4 ;
                     NIL address ;
                     SENDER ;
                     CONS ;
                     VIEW "verified" bool ;
                     IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                     IF {} { PUSH string "Not verified" ; FAILWITH } }
                   {} ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 3 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 7 ;
                SENDER ;
                COMPARE ;
                NEQ ;
                IF {} { PUSH string "AUC_SELLER_CANNOT_BID" ; FAILWITH } ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 3 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 5 ;
                NOW ;
                COMPARE ;
                LT ;
                IF {} { PUSH string "AUC_AUCTION_IS_OVER" ; FAILWITH } ;
                DUP 3 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 3 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 7 ;
                DUP 4 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 4 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 11 ;
                COMPARE ;
                NEQ ;
                IF { PUSH nat 10 ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     GET 9 ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } { CAR } ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     GET 9 ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_BID_AMOUNT_TOO_LOW" ; FAILWITH } ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     GET 13 ;
                     IF_NONE
                       { NIL operation ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 4 ;
                         CAR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 11 ;
                         CONTRACT unit ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         PUSH mutez 1 ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 6 ;
                         CAR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 9 ;
                         MUL ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { DROP ;
                         NIL operation ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 4 ;
                         CAR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 13 ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CONTRACT %transfer
                           (list (pair (address %from_)
                                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                         IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         NIL (pair address (list (pair address (pair nat nat)))) ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 8 ;
                         CAR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 9 ;
                         DUP 9 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 9 ;
                         CAR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 13 ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CDR ;
                         DUP 10 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 10 ;
                         CAR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 11 ;
                         PAIR 3 ;
                         CONS ;
                         SELF_ADDRESS ;
                         PAIR ;
                         CONS ;
                         TRANSFER_TOKENS ;
                         CONS } }
                   { DUP 3 ;
                     CAR ;
                     CAR ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     GET 9 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "AUC_BID_AMOUNT_TOO_LOW" ; FAILWITH } ;
                     NIL operation } ;
                DUP 4 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 4 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 13 ;
                IF_NONE
                  {}
                  { DROP ;
                    DUP 4 ;
                    CAR ;
                    CAR ;
                    GET 3 ;
                    DUP 4 ;
                    CAR ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 13 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    CONTRACT %transfer
                      (list (pair (address %from_)
                                  (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                    IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                    PUSH mutez 0 ;
                    NIL (pair address (list (pair address (pair nat nat)))) ;
                    NIL (pair address (pair nat nat)) ;
                    DUP 6 ;
                    DUP 9 ;
                    CAR ;
                    CAR ;
                    GET 3 ;
                    DUP 9 ;
                    CAR ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 13 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CDR ;
                    SELF_ADDRESS ;
                    PAIR 3 ;
                    CONS ;
                    SENDER ;
                    PAIR ;
                    CONS ;
                    TRANSFER_TOKENS ;
                    CONS } ;
                DIG 3 ;
                UNPAIR ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                DUP ;
                DUP 9 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                SENDER ;
                UPDATE 11 ;
                SOME ;
                SWAP ;
                UPDATE ;
                DUP ;
                DUP 9 ;
                CAR ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                DIG 8 ;
                UPDATE 9 ;
                SOME ;
                SWAP ;
                UPDATE ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                PAIR ;
                DUG 2 ;
                PUSH int 1800 ;
                NOW ;
                DUP 5 ;
                CAR ;
                CAR ;
                GET 3 ;
                DUP 5 ;
                CAR ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 5 ;
                SUB ;
                COMPARE ;
                LT ;
                IF { DIG 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DUP ;
                     DIG 7 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     PUSH int 1800 ;
                     NOW ;
                     ADD ;
                     UPDATE 5 ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP }
                   { SWAP ; DROP } ;
                PAIR } } ;
        Elt 9
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } }
                      { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 5 ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                GET 4 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 9 ;
                IF_NONE
                  { NIL operation ;
                    DUP 3 ;
                    GET 5 ;
                    GET 4 ;
                    DUP 3 ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 5 ;
                    CONTRACT unit ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    PUSH mutez 1 ;
                    DUP 5 ;
                    GET 5 ;
                    GET 4 ;
                    DUP 5 ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 7 ;
                    MUL ;
                    UNIT ;
                    TRANSFER_TOKENS ;
                    CONS }
                  { DROP ;
                    NIL operation ;
                    DUP 3 ;
                    GET 3 ;
                    CAR ;
                    GET 4 ;
                    CONTRACT %batch_fwd_fa2
                      (pair (pair %fa2 address nat)
                            (pair (address %from_) (list %receivers (pair (address %address) (nat %amount))))) ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    PUSH mutez 0 ;
                    NIL (pair address nat) ;
                    DUP 6 ;
                    GET 5 ;
                    GET 4 ;
                    DUP 6 ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 7 ;
                    DUP 7 ;
                    GET 5 ;
                    GET 4 ;
                    DUP 7 ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 5 ;
                    PAIR ;
                    CONS ;
                    SELF_ADDRESS ;
                    DUP 7 ;
                    GET 5 ;
                    GET 4 ;
                    DUP 7 ;
                    GET ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    GET 9 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    PAIR 3 ;
                    TRANSFER_TOKENS ;
                    CONS } ;
                DIG 2 ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                UNPAIR ;
                SWAP ;
                UNPAIR ;
                SWAP ;
                NONE (pair (pair address nat)
                           (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))) ;
                DIG 8 ;
                UPDATE ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR ;
                SWAP ;
                PAIR } } ;
        Elt 10
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { IF_LEFT {} { UNIT ; FAILWITH } } { UNIT ; FAILWITH } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 10 ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 9 ;
                SENDER ;
                COMPARE ;
                EQ ;
                IF {} { UNIT ; FAILWITH } ;
                SENDER ;
                DUP 3 ;
                GET 10 ;
                DUP 3 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 20 ;
                IF { DROP ; PUSH address 0x0000b28066369a8ed09ba9d3d47f19598440266013f0 }
                   {} ;
                NIL operation ;
                DUP 4 ;
                GET 10 ;
                DUP 4 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                CAR ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                DUP 8 ;
                GET 10 ;
                DUP 8 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                GET 5 ;
                DUP 9 ;
                GET 10 ;
                DUP 9 ;
                GET ;
                IF_NONE { UNIT ; FAILWITH } {} ;
                CAR ;
                CDR ;
                DIG 7 ;
                PAIR 3 ;
                CONS ;
                SELF_ADDRESS ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                DIG 2 ;
                DUP ;
                GET 10 ;
                NONE (pair (pair address nat)
                           (pair (option (pair address nat))
                                 (pair nat
                                       (pair nat
                                             (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))) ;
                DIG 4 ;
                UPDATE ;
                UPDATE 10 ;
                SWAP ;
                PAIR } } ;
        Elt 11
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { IF_LEFT { UNIT ; FAILWITH } {} } { UNIT ; FAILWITH } } } ;
                DUP ;
                GET 8 ;
                PUSH nat 0 ;
                COMPARE ;
                LT ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                CAR ;
                IF { PUSH bool False } { SWAP ; DUP ; DUG 2 ; CAR ; GET 7 ; NOT } ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                CAR ;
                GET 4 ;
                SENDER ;
                VIEW "may_trade" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF {} { PUSH string "Banned" ; FAILWITH } ;
                DUP ;
                CAR ;
                GET 3 ;
                IF_NONE
                  {}
                  { DROP ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    GET 3 ;
                    CAR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    GET 3 ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    VIEW "is_accepted_currencies" bool ;
                    IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                    IF {} { UNIT ; FAILWITH } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 3 ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                CAR ;
                VIEW "is_accepted_currencies" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF { UNIT ; FAILWITH } {} ;
                DUP ;
                GET 8 ;
                PUSH nat 1 ;
                COMPARE ;
                LT ;
                IF { DUP ; GET 5 ; SWAP ; DUP ; DUG 2 ; CAR ; GET 4 ; COMPARE ; NEQ }
                   { PUSH bool False } ;
                IF { DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 4 ;
                     COMPARE ;
                     GE ;
                     IF {} { UNIT ; FAILWITH } ;
                     PUSH nat 0 ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     GET 8 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     DIG 2 ;
                     DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     EDIV ;
                     IF_NONE { UNIT ; FAILWITH } {} ;
                     CDR ;
                     COMPARE ;
                     EQ ;
                     IF {} { UNIT ; FAILWITH } }
                   { DUP ;
                     GET 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET 4 ;
                     COMPARE ;
                     EQ ;
                     IF {} { UNIT ; FAILWITH } } ;
                DUP ;
                GET 7 ;
                CAR ;
                CONTRACT %transfer
                  (list (pair (address %from_)
                              (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                NIL operation ;
                SWAP ;
                PUSH mutez 0 ;
                NIL (pair address (list (pair address (pair nat nat)))) ;
                NIL (pair address (pair nat nat)) ;
                DIG 5 ;
                DUP ;
                GET 8 ;
                SWAP ;
                DUP ;
                DUG 7 ;
                GET 7 ;
                CDR ;
                SELF_ADDRESS ;
                PAIR 3 ;
                CONS ;
                SENDER ;
                PAIR ;
                CONS ;
                TRANSFER_TOKENS ;
                CONS ;
                DUP 3 ;
                DUP ;
                GET 10 ;
                DIG 3 ;
                DUP ;
                CAR ;
                CAR ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 5 ;
                GET 3 ;
                CAR ;
                DUP 6 ;
                GET 3 ;
                CDR ;
                DIG 6 ;
                DUP ;
                CAR ;
                CAR ;
                CDR ;
                SWAP ;
                DUP ;
                DUG 8 ;
                CAR ;
                GET 4 ;
                DUP 9 ;
                GET 5 ;
                SENDER ;
                DIG 10 ;
                DUP ;
                GET 8 ;
                SWAP ;
                DUP ;
                GET 8 ;
                SWAP ;
                DUP ;
                DUG 13 ;
                CAR ;
                GET 3 ;
                DUP 14 ;
                GET 7 ;
                PAIR 11 ;
                DIG 4 ;
                DROP ;
                SOME ;
                DIG 4 ;
                GET 9 ;
                UPDATE ;
                UPDATE 10 ;
                DUP ;
                GET 9 ;
                PUSH nat 1 ;
                ADD ;
                UPDATE 9 ;
                SWAP ;
                PAIR } } ;
        Elt 13
            { { UNPAIR ;
                IF_LEFT
                  { UNIT ; FAILWITH }
                  { IF_LEFT
                      { UNIT ; FAILWITH }
                      { IF_LEFT { UNIT ; FAILWITH } { IF_LEFT { UNIT ; FAILWITH } {} } } } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 3 ;
                CAR ;
                GET 4 ;
                SENDER ;
                VIEW "may_trade" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF {} { PUSH string "Banned" ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 7 ;
                CAR ;
                IF { PUSH bool False } { SWAP ; DUP ; DUG 2 ; CAR ; GET 7 ; NOT } ;
                IF {} { UNIT ; FAILWITH } ;
                SWAP ;
                DUP ;
                DUG 2 ;
                CAR ;
                GET 3 ;
                CAR ;
                SWAP ;
                DUP ;
                DUG 2 ;
                GET 5 ;
                CAR ;
                VIEW "is_accepted_currencies" bool ;
                IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                IF { UNIT ; FAILWITH } {} ;
                DUP ;
                CAR ;
                CAR ;
                IF_NONE
                  { PUSH mutez 0 ;
                    AMOUNT ;
                    COMPARE ;
                    GT ;
                    IF {} { UNIT ; FAILWITH } ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    SWAP ;
                    DUP 7 ;
                    GET 3 ;
                    NONE (pair address nat) ;
                    PUSH mutez 1 ;
                    AMOUNT ;
                    EDIV ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    SENDER ;
                    DIG 10 ;
                    DUP ;
                    GET 6 ;
                    SWAP ;
                    DUP ;
                    DUG 12 ;
                    GET 5 ;
                    PAIR 6 ;
                    DIG 7 ;
                    DROP ;
                    SOME ;
                    DIG 7 ;
                    GET 5 ;
                    GET 3 ;
                    UPDATE ;
                    SWAP ;
                    PUSH nat 1 ;
                    ADD ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    NIL operation }
                  { DROP ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    GET 3 ;
                    CAR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    VIEW "is_accepted_currencies" bool ;
                    IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                    IF {} { UNIT ; FAILWITH } ;
                    DUP ;
                    CAR ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CAR ;
                    CONTRACT %transfer
                      (list (pair (address %from_)
                                  (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                    IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                    NIL operation ;
                    SWAP ;
                    PUSH mutez 0 ;
                    NIL (pair address (list (pair address (pair nat nat)))) ;
                    NIL (pair address (pair nat nat)) ;
                    DIG 5 ;
                    DUP ;
                    CAR ;
                    CDR ;
                    SWAP ;
                    DUP ;
                    DUG 7 ;
                    CAR ;
                    CAR ;
                    IF_NONE { UNIT ; FAILWITH } {} ;
                    CDR ;
                    PUSH address 0x01d1371b91ceb5fc2696042c07c5b7bccab0b9ef8d00 ;
                    PAIR 3 ;
                    CONS ;
                    SENDER ;
                    PAIR ;
                    CONS ;
                    TRANSFER_TOKENS ;
                    CONS ;
                    DUP 3 ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    UNPAIR ;
                    SWAP ;
                    UNPAIR ;
                    SWAP ;
                    DIG 7 ;
                    DUP ;
                    GET 3 ;
                    SWAP ;
                    DUP ;
                    CAR ;
                    CAR ;
                    SWAP ;
                    DUP ;
                    DUG 10 ;
                    CAR ;
                    CDR ;
                    SENDER ;
                    DIG 11 ;
                    DUP ;
                    GET 6 ;
                    SWAP ;
                    DUP ;
                    DUG 13 ;
                    GET 5 ;
                    PAIR 6 ;
                    DIG 8 ;
                    DROP ;
                    SOME ;
                    DIG 8 ;
                    GET 5 ;
                    GET 3 ;
                    UPDATE ;
                    SWAP ;
                    PUSH nat 1 ;
                    ADD ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    SWAP ;
                    PAIR ;
                    SWAP } ;
                PAIR } } })
' --burn-cap 10 --force > data/versum_market_deploy.txt
versum_market=$(sed -n '/^.*New[[:space:]]contract[[:space:]]\{1,\}\([-_[:alnum:]]\{1,\}\).*$/s//\1/p' data/versum_market_deploy.txt)
echo $versum_market
