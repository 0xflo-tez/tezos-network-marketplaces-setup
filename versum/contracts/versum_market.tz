{ parameter
    (or (or (or (or (option %_delegate key_hash)
                    (or (unit %_deprecate) (address %_set_administrator)))
                (or (or (pair %_set_fa2_fee (pair %fa2 address nat) (int %fee)) (bool %_set_paused))
                    (or (pair %_set_platform_fee (int %fee) (address %platform))
                        (pair %_withdraw_fa2 (nat %amount) (pair (pair %fa2 address nat) (address %to))))))
            (or (or (pair %_withdraw_xtz (mutez %amount) (address %to))
                    (or (pair %bid (nat %auction_id) (nat %bid_amount_fa2)) (nat %cancel_offer)))
                (or (or (nat %cancel_swap)
                        (pair %create_swap
                           (pair (pair (bool %burn_on_end) (nat %collect_max_per_tx))
                                 (pair (option %currency (pair address nat)) (nat %ending_price_in_nat)))
                           (pair (pair (option %ending_time timestamp) (bool %require_verified))
                                 (pair (nat %starting_price_in_nat)
                                       (pair (pair %token address nat) (nat %token_amount))))))
                    (or (bytes %generic)
                        (pair %make_offer
                           (pair (option %currency (pair address nat)) (nat %price_in_nat))
                           (pair (bool %require_verified) (pair (pair %token address nat) (nat %token_amount))))))))
        (or (or (or (nat %accept_offer) (pair %collect_swap (nat %amount) (nat %swap_id)))
                (or (pair %create_auction
                       (pair (nat %bid_amount)
                             (pair (option %currency (pair address nat)) (timestamp %end_timestamp)))
                       (pair (bool %require_verified) (pair (pair %token address nat) (nat %token_amount))))
                    (pair %create_init_auction
                       (pair (pair (nat %bid_amount) (address %bidder))
                             (pair (option %currency (pair address nat)) (timestamp %end_timestamp)))
                       (pair (pair (bool %require_verified) (address %seller))
                             (pair (pair %token address nat) (nat %token_amount))))))
            (or (or (unit %default)
                    (pair %update_ep
                       (or %ep_name
                          (or (unit %bid) (or (unit %cancel_offer) (unit %cancel_swap)))
                          (or (unit %create_swap) (or (unit %generic) (unit %make_offer))))
                       (lambda %new_ep
                          (pair (or (or (or (option %_delegate key_hash)
                                            (or (unit %_deprecate) (address %_set_administrator)))
                                        (or (or (pair %_set_fa2_fee (pair %fa2 address nat) (int %fee)) (bool %_set_paused))
                                            (or (pair %_set_platform_fee (int %fee) (address %platform))
                                                (pair %_withdraw_fa2 (nat %amount) (pair (pair %fa2 address nat) (address %to))))))
                                    (or (or (pair %_withdraw_xtz (mutez %amount) (address %to))
                                            (or (pair %bid (nat %auction_id) (nat %bid_amount_fa2)) (nat %cancel_offer)))
                                        (or (or (nat %cancel_swap)
                                                (pair %create_swap
                                                   (pair (pair (bool %burn_on_end) (nat %collect_max_per_tx))
                                                         (pair (option %currency (pair address nat)) (nat %ending_price_in_nat)))
                                                   (pair (pair (option %ending_time timestamp) (bool %require_verified))
                                                         (pair (nat %starting_price_in_nat)
                                                               (pair (pair %token address nat) (nat %token_amount))))))
                                            (or (bytes %generic)
                                                (pair %make_offer
                                                   (pair (option %currency (pair address nat)) (nat %price_in_nat))
                                                   (pair (bool %require_verified) (pair (pair %token address nat) (nat %token_amount))))))))
                                (pair (pair (pair (pair (lambda %admin_check_lambda
                                                           (pair (pair (address %address) (option %permission string))
                                                                 (pair (address %self_address) (address %self_admin)))
                                                           bool)
                                                        (pair (address %administrator) (nat %auction_counter)))
                                                  (pair (big_map %auctions
                                                           nat
                                                           (pair (pair %token address nat)
                                                                 (pair (nat %token_amount)
                                                                       (pair (timestamp %end_timestamp)
                                                                             (pair (address %seller)
                                                                                   (pair (nat %bid_amount)
                                                                                         (pair (address %bidder)
                                                                                               (pair (option %currency (pair address nat)) (bool %require_verified)))))))))
                                                        (pair (big_map %collected_fa2_fees (pair address nat) nat)
                                                              (mutez %collected_xtz_fees))))
                                            (pair (pair (address %contract_registry)
                                                        (pair (int %default_fa2_fee) (int %default_platform_fee)))
                                                  (pair (int %default_xtz_fee)
                                                        (pair (bool %deprecated) (big_map %extra_db bytes bytes)))))
                                      (pair (pair (pair (big_map %fa2_fees (pair address nat) int)
                                                        (pair (big_map %fee_per_platform address int) (address %identity)))
                                                  (pair (pair %last_collect_op (nat %level) (address %source))
                                                        (pair (int %max_fee) (big_map %metadata string bytes))))
                                            (pair (pair (int %min_fee)
                                                        (pair (nat %offer_counter)
                                                              (big_map %offers
                                                                 nat
                                                                 (pair (pair %token address nat)
                                                                       (pair (nat %token_amount)
                                                                             (pair (address %buyer)
                                                                                   (pair (nat %price_in_nat)
                                                                                         (pair (option %currency (pair address nat)) (bool %require_verified)))))))))
                                                  (pair (pair (bool %paused) (address %royalty_adapter))
                                                        (pair (nat %swap_counter)
                                                              (big_map %swaps
                                                                 nat
                                                                 (pair (pair %token address nat)
                                                                       (pair (option %currency (pair address nat))
                                                                             (pair (nat %token_left_amount)
                                                                                   (pair (nat %token_start_amount)
                                                                                         (pair (address %seller)
                                                                                               (pair (nat %starting_price_in_nat)
                                                                                                     (pair (nat %ending_price_in_nat)
                                                                                                           (pair (nat %collect_max_per_tx)
                                                                                                                 (pair (bool %require_verified)
                                                                                                                       (pair (option %ending_time timestamp) (bool %burn_on_end))))))))))))))))))
                          (pair (list operation)
                                (pair (pair (pair (pair (lambda %admin_check_lambda
                                                           (pair (pair (address %address) (option %permission string))
                                                                 (pair (address %self_address) (address %self_admin)))
                                                           bool)
                                                        (pair (address %administrator) (nat %auction_counter)))
                                                  (pair (big_map %auctions
                                                           nat
                                                           (pair (pair %token address nat)
                                                                 (pair (nat %token_amount)
                                                                       (pair (timestamp %end_timestamp)
                                                                             (pair (address %seller)
                                                                                   (pair (nat %bid_amount)
                                                                                         (pair (address %bidder)
                                                                                               (pair (option %currency (pair address nat)) (bool %require_verified)))))))))
                                                        (pair (big_map %collected_fa2_fees (pair address nat) nat)
                                                              (mutez %collected_xtz_fees))))
                                            (pair (pair (address %contract_registry)
                                                        (pair (int %default_fa2_fee) (int %default_platform_fee)))
                                                  (pair (int %default_xtz_fee)
                                                        (pair (bool %deprecated) (big_map %extra_db bytes bytes)))))
                                      (pair (pair (pair (big_map %fa2_fees (pair address nat) int)
                                                        (pair (big_map %fee_per_platform address int) (address %identity)))
                                                  (pair (pair %last_collect_op (nat %level) (address %source))
                                                        (pair (int %max_fee) (big_map %metadata string bytes))))
                                            (pair (pair (int %min_fee)
                                                        (pair (nat %offer_counter)
                                                              (big_map %offers
                                                                 nat
                                                                 (pair (pair %token address nat)
                                                                       (pair (nat %token_amount)
                                                                             (pair (address %buyer)
                                                                                   (pair (nat %price_in_nat)
                                                                                         (pair (option %currency (pair address nat)) (bool %require_verified)))))))))
                                                  (pair (pair (bool %paused) (address %royalty_adapter))
                                                        (pair (nat %swap_counter)
                                                              (big_map %swaps
                                                                 nat
                                                                 (pair (pair %token address nat)
                                                                       (pair (option %currency (pair address nat))
                                                                             (pair (nat %token_left_amount)
                                                                                   (pair (nat %token_start_amount)
                                                                                         (pair (address %seller)
                                                                                               (pair (nat %starting_price_in_nat)
                                                                                                     (pair (nat %ending_price_in_nat)
                                                                                                           (pair (nat %collect_max_per_tx)
                                                                                                                 (pair (bool %require_verified)
                                                                                                                       (pair (option %ending_time timestamp) (bool %burn_on_end)))))))))))))))))))))
                (or (pair %update_extra_db (bytes %key) (bytes %value)) (nat %withdraw))))) ;
  storage
    (pair (pair (pair (pair (pair (lambda %admin_check_lambda
                                     (pair (pair (address %address) (option %permission string))
                                           (pair (address %self_address) (address %self_admin)))
                                     bool)
                                  (pair (address %administrator) (nat %auction_counter)))
                            (pair (big_map %auctions
                                     nat
                                     (pair (pair %token address nat)
                                           (pair (nat %token_amount)
                                                 (pair (timestamp %end_timestamp)
                                                       (pair (address %seller)
                                                             (pair (nat %bid_amount)
                                                                   (pair (address %bidder)
                                                                         (pair (option %currency (pair address nat)) (bool %require_verified)))))))))
                                  (pair (big_map %collected_fa2_fees (pair address nat) nat)
                                        (mutez %collected_xtz_fees))))
                      (pair (pair (address %contract_registry)
                                  (pair (int %default_fa2_fee) (int %default_platform_fee)))
                            (pair (int %default_xtz_fee)
                                  (pair (bool %deprecated) (big_map %extra_db bytes bytes)))))
                (pair (pair (pair (big_map %fa2_fees (pair address nat) int)
                                  (pair (big_map %fee_per_platform address int) (address %identity)))
                            (pair (pair %last_collect_op (nat %level) (address %source))
                                  (pair (int %max_fee) (big_map %metadata string bytes))))
                      (pair (pair (int %min_fee)
                                  (pair (nat %offer_counter)
                                        (big_map %offers
                                           nat
                                           (pair (pair %token address nat)
                                                 (pair (nat %token_amount)
                                                       (pair (address %buyer)
                                                             (pair (nat %price_in_nat)
                                                                   (pair (option %currency (pair address nat)) (bool %require_verified)))))))))
                            (pair (pair (bool %paused) (address %royalty_adapter))
                                  (pair (nat %swap_counter)
                                        (big_map %swaps
                                           nat
                                           (pair (pair %token address nat)
                                                 (pair (option %currency (pair address nat))
                                                       (pair (nat %token_left_amount)
                                                             (pair (nat %token_start_amount)
                                                                   (pair (address %seller)
                                                                         (pair (nat %starting_price_in_nat)
                                                                               (pair (nat %ending_price_in_nat)
                                                                                     (pair (nat %collect_max_per_tx)
                                                                                           (pair (bool %require_verified)
                                                                                                 (pair (option %ending_time timestamp) (bool %burn_on_end)))))))))))))))))
          (big_map
             nat
             (lambda
                (pair (or (or (or (option key_hash) (or unit address))
                              (or (or (pair (pair address nat) int) bool)
                                  (or (pair int address) (pair nat (pair (pair address nat) address)))))
                          (or (or (pair mutez address) (or (pair nat nat) nat))
                              (or (or nat
                                      (pair (pair (pair bool nat) (pair (option (pair address nat)) nat))
                                            (pair (pair (option timestamp) bool) (pair nat (pair (pair address nat) nat)))))
                                  (or bytes
                                      (pair (pair (option (pair address nat)) nat) (pair bool (pair (pair address nat) nat)))))))
                      (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                              (pair address nat))
                                        (pair (big_map
                                                 nat
                                                 (pair (pair address nat)
                                                       (pair nat
                                                             (pair timestamp
                                                                   (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                              (pair (big_map (pair address nat) nat) mutez)))
                                  (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                            (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                        (pair (pair nat address) (pair int (big_map string bytes))))
                                  (pair (pair int
                                              (pair nat
                                                    (big_map
                                                       nat
                                                       (pair (pair address nat)
                                                             (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                        (pair (pair bool address)
                                              (pair nat
                                                    (big_map
                                                       nat
                                                       (pair (pair address nat)
                                                             (pair (option (pair address nat))
                                                                   (pair nat
                                                                         (pair nat
                                                                               (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))))))))))
                (pair (list operation)
                      (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                              (pair address nat))
                                        (pair (big_map
                                                 nat
                                                 (pair (pair address nat)
                                                       (pair nat
                                                             (pair timestamp
                                                                   (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                              (pair (big_map (pair address nat) nat) mutez)))
                                  (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                            (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                        (pair (pair nat address) (pair int (big_map string bytes))))
                                  (pair (pair int
                                              (pair nat
                                                    (big_map
                                                       nat
                                                       (pair (pair address nat)
                                                             (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                        (pair (pair bool address)
                                              (pair nat
                                                    (big_map
                                                       nat
                                                       (pair (pair address nat)
                                                             (pair (option (pair address nat))
                                                                   (pair nat
                                                                         (pair nat
                                                                               (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))))))))))))) ;
  code { LAMBDA
           (pair (pair (pair (pair nat address) (pair (option (pair address nat)) timestamp))
                       (pair (pair bool address) (pair (pair address nat) nat)))
                 (pair (list operation)
                       (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                               (pair address nat))
                                         (pair (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair nat
                                                              (pair timestamp
                                                                    (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                               (pair (big_map (pair address nat) nat) mutez)))
                                   (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                             (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                         (pair (pair nat address) (pair int (big_map string bytes))))
                                   (pair (pair int
                                               (pair nat
                                                     (big_map
                                                        nat
                                                        (pair (pair address nat)
                                                              (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                         (pair (pair bool address)
                                               (pair nat
                                                     (big_map
                                                        nat
                                                        (pair (pair address nat)
                                                              (pair (option (pair address nat))
                                                                    (pair nat
                                                                          (pair nat
                                                                                (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool))))))))))))))))))
           (pair unit
                 (pair (list operation)
                       (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                               (pair address nat))
                                         (pair (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair nat
                                                              (pair timestamp
                                                                    (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                               (pair (big_map (pair address nat) nat) mutez)))
                                   (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                             (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                         (pair (pair nat address) (pair int (big_map string bytes))))
                                   (pair (pair int
                                               (pair nat
                                                     (big_map
                                                        nat
                                                        (pair (pair address nat)
                                                              (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                         (pair (pair bool address)
                                               (pair nat
                                                     (big_map
                                                        nat
                                                        (pair (pair address nat)
                                                              (pair (option (pair address nat))
                                                                    (pair nat
                                                                          (pair nat
                                                                                (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool))))))))))))))))))
           { UNPAIR 3 ;
             SWAP ;
             PUSH nat 0 ;
             DUP 3 ;
             GET 6 ;
             COMPARE ;
             GT ;
             IF {} { PUSH string "AUC_TOKEN_AMOUNT_TOO_LOW" ; FAILWITH } ;
             DUP 3 ;
             GET 7 ;
             CAR ;
             IF { PUSH bool False } { DUP 3 ; CAR ; GET 7 ; NOT } ;
             IF {} { UNIT ; FAILWITH } ;
             PUSH int 60 ;
             DUP ;
             PUSH int 1 ;
             MUL ;
             MUL ;
             NOW ;
             ADD ;
             DUP 3 ;
             CAR ;
             GET 4 ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "AUC_END_DATE_TOO_SOON" ; FAILWITH } ;
             PUSH int 60 ;
             DUP ;
             PUSH int 168 ;
             MUL ;
             MUL ;
             NOW ;
             ADD ;
             DUP 3 ;
             CAR ;
             GET 4 ;
             COMPARE ;
             LE ;
             IF {} { PUSH string "AUC_END_DATE_TOO_LATE" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET 3 ;
             IF_NONE
               {}
               { DROP ;
                 DUP 3 ;
                 CAR ;
                 GET 3 ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 GET 3 ;
                 IF_NONE { UNIT ; FAILWITH } {} ;
                 CAR ;
                 VIEW "is_accepted_currencies" bool ;
                 IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                 IF {} { UNIT ; FAILWITH } } ;
             DUP 3 ;
             CAR ;
             GET 3 ;
             CAR ;
             DUP 3 ;
             GET 5 ;
             CAR ;
             VIEW "is_accepted_currencies" bool ;
             IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
             IF { UNIT ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address (pair nat nat)))) ;
             NIL (pair address (pair nat nat)) ;
             DIG 5 ;
             DUP ;
             GET 6 ;
             SWAP ;
             DUP ;
             DUG 7 ;
             GET 5 ;
             CDR ;
             SELF_ADDRESS ;
             PAIR 3 ;
             CONS ;
             DUP 6 ;
             GET 3 ;
             CDR ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS ;
             CONS ;
             DUP 3 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 6 ;
             DUP ;
             GET 3 ;
             CAR ;
             SWAP ;
             DUP ;
             CAR ;
             GET 3 ;
             SWAP ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             GET 3 ;
             CDR ;
             SWAP ;
             DUP ;
             CAR ;
             GET 4 ;
             SWAP ;
             DUP ;
             GET 6 ;
             SWAP ;
             DUP ;
             DUG 14 ;
             GET 5 ;
             PAIR 8 ;
             DIG 7 ;
             DROP ;
             SOME ;
             DIG 7 ;
             CAR ;
             CAR ;
             CAR ;
             GET 4 ;
             UPDATE ;
             PAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH nat 1 ;
             ADD ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             UNIT ;
             PAIR 3 } ;
         SWAP ;
         LAMBDA
           (pair (pair nat (pair (pair address nat) address))
                 (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                         (pair address nat))
                                   (pair (big_map
                                            nat
                                            (pair (pair address nat)
                                                  (pair nat
                                                        (pair timestamp
                                                              (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                         (pair (big_map (pair address nat) nat) mutez)))
                             (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                       (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                   (pair (pair nat address) (pair int (big_map string bytes))))
                             (pair (pair int
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                   (pair (pair bool address)
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair (option (pair address nat))
                                                              (pair nat
                                                                    (pair nat
                                                                          (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))))))))))
           (pair nat
                 (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                         (pair address nat))
                                   (pair (big_map
                                            nat
                                            (pair (pair address nat)
                                                  (pair nat
                                                        (pair timestamp
                                                              (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                         (pair (big_map (pair address nat) nat) mutez)))
                             (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                       (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                   (pair (pair nat address) (pair int (big_map string bytes))))
                             (pair (pair int
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                   (pair (pair bool address)
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair (option (pair address nat))
                                                              (pair nat
                                                                    (pair nat
                                                                          (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))))))))))
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             MEM ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  UNPAIR ;
                  UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  DUP ;
                  DUP 8 ;
                  GET 3 ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  IF_NONE { UNIT ; FAILWITH } {} ;
                  PUSH nat 1000 ;
                  DUP 11 ;
                  GET 3 ;
                  CAR ;
                  CAR ;
                  DUP 11 ;
                  GET 3 ;
                  GET ;
                  IF_NONE { DUP 11 ; CAR ; GET 3 ; GET 4 } {} ;
                  DUP 12 ;
                  GET 3 ;
                  CAR ;
                  GET 3 ;
                  DUP 12 ;
                  GET 4 ;
                  GET ;
                  IF_NONE { DUP 12 ; CAR ; GET 3 ; GET 4 } {} ;
                  ADD ;
                  DUP 12 ;
                  GET 5 ;
                  CAR ;
                  DUP ;
                  DUP 3 ;
                  COMPARE ;
                  LE ;
                  IF { SWAP ; DROP } { DROP } ;
                  DIG 11 ;
                  GET 3 ;
                  GET 5 ;
                  DUP ;
                  DUP 3 ;
                  COMPARE ;
                  LE ;
                  IF { DROP } { SWAP ; DROP } ;
                  ISNAT ;
                  IF_NONE { UNIT ; FAILWITH } {} ;
                  DUP 11 ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { UNIT ; FAILWITH } {} ;
                  CAR ;
                  ADD ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  SWAP }
                { SWAP ;
                  DUP ;
                  DUG 2 ;
                  UNPAIR ;
                  UNPAIR ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  SWAP ;
                  UNPAIR ;
                  PUSH nat 1000 ;
                  DUP 9 ;
                  GET 3 ;
                  CAR ;
                  CAR ;
                  DUP 9 ;
                  GET 3 ;
                  GET ;
                  IF_NONE { DUP 9 ; CAR ; GET 3 ; GET 4 } {} ;
                  DUP 10 ;
                  GET 3 ;
                  CAR ;
                  GET 3 ;
                  DUP 10 ;
                  GET 4 ;
                  GET ;
                  IF_NONE { DUP 10 ; CAR ; GET 3 ; GET 4 } {} ;
                  ADD ;
                  DUP 10 ;
                  GET 5 ;
                  CAR ;
                  DUP ;
                  DUP 3 ;
                  COMPARE ;
                  LE ;
                  IF { SWAP ; DROP } { DROP } ;
                  DIG 9 ;
                  GET 3 ;
                  GET 5 ;
                  DUP ;
                  DUP 3 ;
                  COMPARE ;
                  LE ;
                  IF { DROP } { SWAP ; DROP } ;
                  ISNAT ;
                  IF_NONE { UNIT ; FAILWITH } {} ;
                  DUP 9 ;
                  CAR ;
                  MUL ;
                  EDIV ;
                  IF_NONE { UNIT ; FAILWITH } {} ;
                  CAR ;
                  SOME ;
                  DUP 8 ;
                  GET 3 ;
                  UPDATE ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  SWAP } ;
             PUSH nat 1000 ;
             DUP 3 ;
             GET 3 ;
             CAR ;
             CAR ;
             DUP 3 ;
             GET 3 ;
             GET ;
             IF_NONE { DUP 3 ; CAR ; GET 3 ; GET 4 } {} ;
             DUP 4 ;
             GET 3 ;
             CAR ;
             GET 3 ;
             DUP 4 ;
             GET 4 ;
             GET ;
             IF_NONE { DUP 4 ; CAR ; GET 3 ; GET 4 } {} ;
             ADD ;
             DUP 4 ;
             GET 5 ;
             CAR ;
             DUP ;
             DUP 3 ;
             COMPARE ;
             LE ;
             IF { SWAP ; DROP } { DROP } ;
             DUP 4 ;
             GET 3 ;
             GET 5 ;
             DUP ;
             DUP 3 ;
             COMPARE ;
             LE ;
             IF { DROP } { SWAP ; DROP } ;
             ISNAT ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             DIG 2 ;
             CAR ;
             MUL ;
             EDIV ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             CAR ;
             PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair nat address)
                 (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                         (pair address nat))
                                   (pair (big_map
                                            nat
                                            (pair (pair address nat)
                                                  (pair nat
                                                        (pair timestamp
                                                              (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                         (pair (big_map (pair address nat) nat) mutez)))
                             (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                       (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                   (pair (pair nat address) (pair int (big_map string bytes))))
                             (pair (pair int
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                   (pair (pair bool address)
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair (option (pair address nat))
                                                              (pair nat
                                                                    (pair nat
                                                                          (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))))))))))
           (pair nat
                 (pair (pair (pair (pair (lambda (pair (pair address (option string)) (pair address address)) bool)
                                         (pair address nat))
                                   (pair (big_map
                                            nat
                                            (pair (pair address nat)
                                                  (pair nat
                                                        (pair timestamp
                                                              (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))))
                                         (pair (big_map (pair address nat) nat) mutez)))
                             (pair (pair address (pair int int)) (pair int (pair bool (big_map bytes bytes)))))
                       (pair (pair (pair (big_map (pair address nat) int) (pair (big_map address int) address))
                                   (pair (pair nat address) (pair int (big_map string bytes))))
                             (pair (pair int
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))))))
                                   (pair (pair bool address)
                                         (pair nat
                                               (big_map
                                                  nat
                                                  (pair (pair address nat)
                                                        (pair (option (pair address nat))
                                                              (pair nat
                                                                    (pair nat
                                                                          (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))))))))))
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             SWAP ;
             PUSH mutez 1 ;
             PUSH nat 1000 ;
             DIG 9 ;
             DUP ;
             CAR ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 11 ;
             GET 3 ;
             CAR ;
             GET 3 ;
             DUP 11 ;
             CDR ;
             GET ;
             IF_NONE { DUP 11 ; CAR ; GET 3 ; GET 4 } {} ;
             ADD ;
             DUP 11 ;
             GET 5 ;
             CAR ;
             DUP ;
             DUP 3 ;
             COMPARE ;
             LE ;
             IF { SWAP ; DROP } { DROP } ;
             DIG 10 ;
             GET 3 ;
             GET 5 ;
             DUP ;
             DUP 3 ;
             COMPARE ;
             LE ;
             IF { DROP } { SWAP ; DROP } ;
             ISNAT ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             DUP 10 ;
             CAR ;
             MUL ;
             EDIV ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             CAR ;
             MUL ;
             ADD ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PUSH nat 1000 ;
             DIG 2 ;
             DUP ;
             CAR ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 4 ;
             GET 3 ;
             CAR ;
             GET 3 ;
             DUP 4 ;
             CDR ;
             GET ;
             IF_NONE { DUP 4 ; CAR ; GET 3 ; GET 4 } {} ;
             ADD ;
             DUP 4 ;
             GET 5 ;
             CAR ;
             DUP ;
             DUP 3 ;
             COMPARE ;
             LE ;
             IF { SWAP ; DROP } { DROP } ;
             DUP 4 ;
             GET 3 ;
             GET 5 ;
             DUP ;
             DUP 3 ;
             COMPARE ;
             LE ;
             IF { DROP } { SWAP ; DROP } ;
             ISNAT ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             DIG 2 ;
             CAR ;
             MUL ;
             EDIV ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             CAR ;
             PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (pair (pair nat address) (pair (option (pair address nat)) (pair nat address)))
                       (pair (pair address address) (pair address (pair (pair address nat) address))))
                 (list operation))
           (pair unit (list operation))
           { UNPAIR ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET 3 ;
             IF_NONE
               { PUSH address "tz1burnburnburnburnburnburnburjAYjjX" ;
                 DUP 3 ;
                 GET 3 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 8 ;
                      CONTRACT %pay_royalties_xtz
                        (pair (address %buyer) (pair (address %seller) (pair %token address nat))) ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      PUSH mutez 1 ;
                      DIG 3 ;
                      DUP ;
                      CAR ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      SUB ;
                      ISNAT ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      MUL ;
                      DIG 3 ;
                      DUP ;
                      GET 7 ;
                      SWAP ;
                      DUP ;
                      GET 5 ;
                      SWAP ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR 3 ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 3 ;
                      CAR ;
                      CONTRACT %pay_royalties_xtz
                        (pair (address %buyer) (pair (address %seller) (nat %token_id))) ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      PUSH mutez 1 ;
                      DIG 3 ;
                      DUP ;
                      CAR ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      SUB ;
                      ISNAT ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      MUL ;
                      DIG 3 ;
                      DUP ;
                      GET 7 ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      GET 5 ;
                      SWAP ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR 3 ;
                      TRANSFER_TOKENS ;
                      CONS } }
               { DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET 3 ;
                 IF_NONE { UNIT ; FAILWITH } {} ;
                 CAR ;
                 CONTRACT %update_operators
                   (list (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                             (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))) ;
                 IF_NONE { UNIT ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 NIL (or (pair address (pair address nat)) (pair address (pair address nat))) ;
                 DUP 5 ;
                 CAR ;
                 GET 3 ;
                 IF_NONE { UNIT ; FAILWITH } {} ;
                 CDR ;
                 DIG 5 ;
                 DUP ;
                 CAR ;
                 GET 6 ;
                 SWAP ;
                 DUP ;
                 DUG 7 ;
                 GET 3 ;
                 CDR ;
                 PAIR 3 ;
                 LEFT (pair address (pair address nat)) ;
                 CONS ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PUSH address "tz1burnburnburnburnburnburnburjAYjjX" ;
                 DUP 3 ;
                 GET 3 ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ;
                      DUP 3 ;
                      GET 8 ;
                      CONTRACT %pay_royalties_fa2
                        (pair (address %buyer)
                              (pair (address %seller)
                                    (pair (pair %token address nat) (pair (pair %fa2 address nat) (nat %amount))))) ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      CAR ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      SUB ;
                      ISNAT ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      DUP 6 ;
                      CAR ;
                      GET 3 ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      DIG 6 ;
                      DUP ;
                      GET 7 ;
                      SWAP ;
                      DUP ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR 5 ;
                      DIG 4 ;
                      DROP ;
                      DIG 4 ;
                      DROP ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { DUP ;
                      DUP 3 ;
                      GET 3 ;
                      CAR ;
                      CONTRACT %pay_royalties_fa2
                        (pair (address %buyer)
                              (pair (address %seller)
                                    (pair (nat %token_id) (pair (pair %fa2 address nat) (nat %amount))))) ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      PUSH mutez 0 ;
                      DIG 4 ;
                      DUP ;
                      CAR ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      SUB ;
                      ISNAT ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      DUP 6 ;
                      CAR ;
                      GET 3 ;
                      IF_NONE { UNIT ; FAILWITH } {} ;
                      DIG 6 ;
                      DUP ;
                      GET 7 ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      GET 5 ;
                      SWAP ;
                      DUP ;
                      DUG 9 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PAIR 5 ;
                      DIG 4 ;
                      DROP ;
                      DIG 4 ;
                      DROP ;
                      TRANSFER_TOKENS ;
                      CONS } } ;
             UNIT ;
             PAIR } ;
         SWAP ;
         UNPAIR 3 ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DUP ;
             IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { DROP ; PUSH nat 0 }
                       { IF_LEFT { DROP ; PUSH nat 1 } { DROP ; PUSH nat 2 } } }
                   { IF_LEFT
                       { IF_LEFT { DROP ; PUSH nat 3 } { DROP ; PUSH nat 4 } }
                       { IF_LEFT { DROP ; PUSH nat 5 } { DROP ; PUSH nat 6 } } } }
               { IF_LEFT
                   { IF_LEFT
                       { DROP ; PUSH nat 7 }
                       { IF_LEFT { DROP ; PUSH nat 8 } { DROP ; PUSH nat 9 } } }
                   { IF_LEFT
                       { IF_LEFT { DROP ; PUSH nat 10 } { DROP ; PUSH nat 11 } }
                       { IF_LEFT { DROP ; PUSH nat 12 } { DROP ; PUSH nat 13 } } } } ;
             DUP 4 ;
             SWAP ;
             GET ;
             IF_NONE { UNIT ; FAILWITH } {} ;
             DUG 2 ;
             PAIR ;
             EXEC ;
             UNPAIR }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         CAR ;
                         IF { UNIT ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         CAR ;
                         GET 4 ;
                         SENDER ;
                         VIEW "may_trade" bool ;
                         IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                         IF {} { PUSH string "Banned" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 5 ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 10 ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              CAR ;
                              GET 4 ;
                              NIL address ;
                              SENDER ;
                              CONS ;
                              VIEW "verified" bool ;
                              IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                              IF {} { PUSH string "Not verified" ; FAILWITH } }
                            {} ;
                         NIL operation ;
                         DUP 3 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer
                           (list (pair (address %from_)
                                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                         IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         NIL (pair address (list (pair address (pair nat nat)))) ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 7 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 7 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 3 ;
                         DUP 8 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 8 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         DUP 9 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 9 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 5 ;
                         PAIR 3 ;
                         CONS ;
                         SENDER ;
                         PAIR ;
                         CONS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 3 ;
                         GET 5 ;
                         GET 4 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 9 ;
                         IF_NONE
                           { DIG 6 ;
                             DROP ;
                             DIG 6 ;
                             DROP ;
                             DIG 4 ;
                             DIG 3 ;
                             DUP ;
                             GET 7 ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 5 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 5 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             PAIR ;
                             SENDER ;
                             PAIR ;
                             SELF_ADDRESS ;
                             DIG 5 ;
                             DUP ;
                             CAR ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 7 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 7 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             VIEW "royalty_adapter" address ;
                             IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                             PAIR ;
                             PAIR ;
                             DUP 5 ;
                             GET 3 ;
                             CAR ;
                             GET 4 ;
                             DIG 7 ;
                             DUP 7 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 7 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             PUSH mutez 1 ;
                             DUP ;
                             DUP 10 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 10 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 7 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             DIG 7 ;
                             DIG 2 ;
                             PAIR ;
                             EXEC ;
                             UNPAIR ;
                             DIG 7 ;
                             DIG 2 ;
                             DUG 7 ;
                             DUG 7 ;
                             PAIR ;
                             NONE (pair address nat) ;
                             PAIR ;
                             DUP 6 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 6 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 5 ;
                             PUSH mutez 1 ;
                             DUP ;
                             DUP 9 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 9 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 7 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             DUG 2 ;
                             PAIR ;
                             EXEC ;
                             CDR }
                           { DROP ;
                             DIG 5 ;
                             DROP ;
                             DIG 6 ;
                             DROP ;
                             DIG 4 ;
                             DIG 3 ;
                             DUP ;
                             GET 7 ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 5 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 5 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             PAIR ;
                             SENDER ;
                             PAIR ;
                             SELF_ADDRESS ;
                             DIG 5 ;
                             DUP ;
                             CAR ;
                             GET 3 ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             DUG 7 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 7 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             VIEW "royalty_adapter" address ;
                             IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                             PAIR ;
                             PAIR ;
                             DUP 5 ;
                             GET 3 ;
                             CAR ;
                             GET 4 ;
                             DIG 7 ;
                             DUP 7 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 7 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             CAR ;
                             CAR ;
                             DUP 8 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 8 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 9 ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             DUP 9 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 9 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 7 ;
                             PAIR 3 ;
                             SWAP ;
                             DIG 7 ;
                             DIG 2 ;
                             PAIR ;
                             EXEC ;
                             UNPAIR ;
                             DIG 7 ;
                             DIG 2 ;
                             DUG 7 ;
                             DUG 7 ;
                             PAIR ;
                             DUP 6 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 6 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 9 ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             SOME ;
                             PAIR ;
                             DUP 6 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 6 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 5 ;
                             DUP 7 ;
                             GET 5 ;
                             GET 4 ;
                             DUP 7 ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 7 ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             DUG 2 ;
                             PAIR ;
                             EXEC ;
                             CDR } ;
                         DIG 2 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         NONE (pair (pair address nat)
                                    (pair nat (pair address (pair nat (pair (option (pair address nat)) bool))))) ;
                         DIG 8 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         CAR ;
                         IF { UNIT ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         CAR ;
                         GET 4 ;
                         SENDER ;
                         VIEW "may_trade" bool ;
                         IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                         IF {} { PUSH string "Banned" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 10 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 9 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF {} { UNIT ; FAILWITH } ;
                         DUP ;
                         CAR ;
                         PUSH nat 0 ;
                         COMPARE ;
                         LT ;
                         IF {} { UNIT ; FAILWITH } ;
                         PUSH nat 0 ;
                         SOURCE ;
                         LEVEL ;
                         DIG 2 ;
                         DROP ;
                         PAIR ;
                         DUP 3 ;
                         GET 3 ;
                         GET 3 ;
                         COMPARE ;
                         EQ ;
                         IF { UNIT ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 10 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 17 ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 3 ;
                              CAR ;
                              GET 4 ;
                              NIL address ;
                              SENDER ;
                              CONS ;
                              VIEW "verified" bool ;
                              IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                              IF {} { PUSH string "Not verified" ; FAILWITH } }
                            {} ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         GET 10 ;
                         DUP 3 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 15 ;
                         COMPARE ;
                         GT ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 10 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 15 ;
                              DUP 3 ;
                              GET 10 ;
                              DUP 3 ;
                              CDR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 5 ;
                              DUP 3 ;
                              CAR ;
                              DUP ;
                              DUP 3 ;
                              COMPARE ;
                              LE ;
                              IF { DROP } { SWAP ; DROP } ;
                              COMPARE ;
                              LE ;
                              IF {} { UNIT ; FAILWITH } }
                            {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 10 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 19 ;
                         IF_NONE
                           {}
                           { DROP ;
                             NOW ;
                             DUP 3 ;
                             GET 10 ;
                             DUP 3 ;
                             CDR ;
                             GET ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             GET 19 ;
                             IF_NONE { UNIT ; FAILWITH } {} ;
                             COMPARE ;
                             GT ;
                             IF {} { UNIT ; FAILWITH } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 10 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 13 ;
                         DUP 3 ;
                         GET 10 ;
                         DUP 3 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 11 ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH nat 1 ;
                              DUP 3 ;
                              GET 10 ;
                              DUP 3 ;
                              CDR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 5 ;
                              DUP 3 ;
                              CAR ;
                              DUP ;
                              DUP 3 ;
                              COMPARE ;
                              LE ;
                              IF { DROP } { SWAP ; DROP } ;
                              COMPARE ;
                              NEQ ;
                              IF { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 10 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   DUP ;
                                   DUP 3 ;
                                   COMPARE ;
                                   LE ;
                                   IF { DROP } { SWAP ; DROP } ;
                                   DUP 3 ;
                                   GET 10 ;
                                   DUP 3 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 11 ;
                                   MUL ;
                                   PUSH nat 2 ;
                                   DUP 4 ;
                                   GET 10 ;
                                   DUP 4 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   DUP 4 ;
                                   CAR ;
                                   DUP ;
                                   DUP 3 ;
                                   COMPARE ;
                                   LE ;
                                   IF { DROP } { SWAP ; DROP } ;
                                   PUSH nat 1 ;
                                   DUP 6 ;
                                   GET 10 ;
                                   DUP 6 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   DUP 6 ;
                                   CAR ;
                                   DUP ;
                                   DUP 3 ;
                                   COMPARE ;
                                   LE ;
                                   IF { DROP } { SWAP ; DROP } ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   MUL ;
                                   EDIV ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   CAR ;
                                   DUP 4 ;
                                   GET 10 ;
                                   DUP 4 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   DUP 5 ;
                                   GET 10 ;
                                   DUP 5 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 7 ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   DUP 5 ;
                                   GET 10 ;
                                   DUP 5 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   DUP 5 ;
                                   CAR ;
                                   DUP ;
                                   DUP 3 ;
                                   COMPARE ;
                                   LE ;
                                   IF { DROP } { SWAP ; DROP } ;
                                   MUL ;
                                   ADD ;
                                   PUSH nat 1 ;
                                   DUP 5 ;
                                   GET 10 ;
                                   DUP 5 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 7 ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   DUP 5 ;
                                   GET 10 ;
                                   DUP 5 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 11 ;
                                   DUP 6 ;
                                   GET 10 ;
                                   DUP 6 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 13 ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   EDIV ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   CAR ;
                                   MUL ;
                                   ADD }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET 10 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   DUP ;
                                   DUP 3 ;
                                   COMPARE ;
                                   LE ;
                                   IF { DROP } { SWAP ; DROP } ;
                                   DUP 3 ;
                                   GET 10 ;
                                   DUP 3 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 11 ;
                                   DUP 4 ;
                                   GET 10 ;
                                   DUP 4 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 5 ;
                                   DUP 5 ;
                                   GET 10 ;
                                   DUP 5 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 7 ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   DUP 5 ;
                                   GET 10 ;
                                   DUP 5 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 7 ;
                                   DUP 6 ;
                                   GET 10 ;
                                   DUP 6 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 11 ;
                                   DUP 7 ;
                                   GET 10 ;
                                   DUP 7 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 13 ;
                                   SUB ;
                                   ISNAT ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   EDIV ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   CAR ;
                                   MUL ;
                                   ADD ;
                                   MUL } }
                            { SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET 10 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 5 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              DUP ;
                              DUP 3 ;
                              COMPARE ;
                              LE ;
                              IF { DROP } { SWAP ; DROP } ;
                              DUP 3 ;
                              GET 10 ;
                              DUP 3 ;
                              CDR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 11 ;
                              MUL } ;
                         DUP ;
                         PUSH nat 0 ;
                         COMPARE ;
                         LT ;
                         IF { DUP 3 ;
                              GET 10 ;
                              DUP 3 ;
                              CDR ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 3 ;
                              IF_NONE
                                { DUP ;
                                  PUSH mutez 1 ;
                                  SWAP ;
                                  MUL ;
                                  AMOUNT ;
                                  COMPARE ;
                                  GE ;
                                  IF {} { UNIT ; FAILWITH } ;
                                  PUSH mutez 0 ;
                                  PUSH mutez 1 ;
                                  DUP 3 ;
                                  MUL ;
                                  AMOUNT ;
                                  SUB_MUTEZ ;
                                  ASSERT_SOME ;
                                  COMPARE ;
                                  GT ;
                                  IF { NIL operation ;
                                       SENDER ;
                                       CONTRACT unit ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       PUSH mutez 1 ;
                                       DUP 4 ;
                                       MUL ;
                                       AMOUNT ;
                                       SUB_MUTEZ ;
                                       ASSERT_SOME ;
                                       UNIT ;
                                       TRANSFER_TOKENS ;
                                       CONS }
                                     { NIL operation } ;
                                  DUP 6 ;
                                  DIG 4 ;
                                  DUP ;
                                  GET 7 ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 6 ;
                                  GET 10 ;
                                  DUP 6 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  PAIR ;
                                  DUP 6 ;
                                  GET 10 ;
                                  DUP 6 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  GET 9 ;
                                  PAIR ;
                                  SELF_ADDRESS ;
                                  DIG 6 ;
                                  DUP ;
                                  CAR ;
                                  GET 3 ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 8 ;
                                  GET 10 ;
                                  DUP 8 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  CAR ;
                                  VIEW "royalty_adapter" address ;
                                  IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                  PAIR ;
                                  PAIR ;
                                  DUP 6 ;
                                  GET 3 ;
                                  CAR ;
                                  GET 4 ;
                                  DUP 10 ;
                                  DUP 8 ;
                                  GET 10 ;
                                  DUP 8 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  CAR ;
                                  PUSH mutez 1 ;
                                  DUP ;
                                  DUP 9 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  PAIR ;
                                  SWAP ;
                                  DIG 8 ;
                                  DIG 2 ;
                                  PAIR ;
                                  EXEC ;
                                  UNPAIR ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 6 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  PAIR ;
                                  NONE (pair address nat) ;
                                  PAIR ;
                                  SENDER ;
                                  PUSH mutez 1 ;
                                  DUP ;
                                  DUP 8 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  DUG 2 ;
                                  PAIR ;
                                  EXEC ;
                                  CDR }
                                { DROP ;
                                  NIL operation ;
                                  DUP 4 ;
                                  GET 10 ;
                                  DUP 4 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  GET 3 ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  CONTRACT %transfer
                                    (list (pair (address %from_)
                                                (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                  IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                                  PUSH mutez 0 ;
                                  NIL (pair address (list (pair address (pair nat nat)))) ;
                                  NIL (pair address (pair nat nat)) ;
                                  DUP 6 ;
                                  DUP 9 ;
                                  GET 10 ;
                                  DUP 9 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  GET 3 ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CDR ;
                                  SELF_ADDRESS ;
                                  PAIR 3 ;
                                  CONS ;
                                  SENDER ;
                                  PAIR ;
                                  CONS ;
                                  TRANSFER_TOKENS ;
                                  CONS ;
                                  DUP 6 ;
                                  DIG 4 ;
                                  DUP ;
                                  GET 7 ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 6 ;
                                  GET 10 ;
                                  DUP 6 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  PAIR ;
                                  DUP 6 ;
                                  GET 10 ;
                                  DUP 6 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  GET 9 ;
                                  PAIR ;
                                  SELF_ADDRESS ;
                                  DIG 6 ;
                                  DUP ;
                                  CAR ;
                                  GET 3 ;
                                  CAR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 8 ;
                                  GET 10 ;
                                  DUP 8 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  CAR ;
                                  VIEW "royalty_adapter" address ;
                                  IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                  PAIR ;
                                  PAIR ;
                                  DUP 6 ;
                                  GET 3 ;
                                  CAR ;
                                  GET 4 ;
                                  DUP 11 ;
                                  DUP 8 ;
                                  GET 10 ;
                                  DUP 8 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  CAR ;
                                  CAR ;
                                  DUP 9 ;
                                  GET 10 ;
                                  DUP 9 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  GET 3 ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  DUP 8 ;
                                  PAIR 3 ;
                                  SWAP ;
                                  DIG 8 ;
                                  DIG 2 ;
                                  PAIR ;
                                  EXEC ;
                                  UNPAIR ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 12 ;
                                  DIG 6 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  DUG 12 ;
                                  PAIR ;
                                  DUP 7 ;
                                  GET 10 ;
                                  DUP 7 ;
                                  CDR ;
                                  GET ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  GET 3 ;
                                  IF_NONE { UNIT ; FAILWITH } {} ;
                                  SOME ;
                                  PAIR ;
                                  SENDER ;
                                  DUP 6 ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR ;
                                  SWAP ;
                                  DUG 2 ;
                                  PAIR ;
                                  EXEC ;
                                  CDR } }
                            { NIL operation } ;
                         DUP 4 ;
                         GET 10 ;
                         DUP 4 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer
                           (list (pair (address %from_)
                                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                         IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         NIL (pair address (list (pair address (pair nat nat)))) ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 8 ;
                         GET 10 ;
                         DUP 8 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 5 ;
                         DUP 8 ;
                         CAR ;
                         DUP ;
                         DUP 3 ;
                         COMPARE ;
                         LE ;
                         IF { DROP } { SWAP ; DROP } ;
                         DUP 9 ;
                         GET 10 ;
                         DUP 9 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         SENDER ;
                         PAIR 3 ;
                         CONS ;
                         SELF_ADDRESS ;
                         PAIR ;
                         CONS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DUP 4 ;
                         DUP ;
                         GET 10 ;
                         DUP ;
                         DUP 6 ;
                         CDR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         DUP 8 ;
                         GET 10 ;
                         DUP 8 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 5 ;
                         DUP 8 ;
                         CAR ;
                         DUP ;
                         DUP 3 ;
                         COMPARE ;
                         LE ;
                         IF { DROP } { SWAP ; DROP } ;
                         DIG 8 ;
                         GET 10 ;
                         DUP 9 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 5 ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         UPDATE 5 ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 10 ;
                         DUG 3 ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         GET 10 ;
                         DUP 5 ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 5 ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 3 ;
                              DUP ;
                              GET 10 ;
                              NONE (pair (pair address nat)
                                         (pair (option (pair address nat))
                                               (pair nat
                                                     (pair nat
                                                           (pair address (pair nat (pair nat (pair nat (pair bool (pair (option timestamp) bool)))))))))) ;
                              DUP 6 ;
                              CDR ;
                              UPDATE ;
                              UPDATE 10 ;
                              DUG 3 }
                            {} ;
                         DIG 3 ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         CDR ;
                         SOURCE ;
                         LEVEL ;
                         DIG 7 ;
                         DROP ;
                         DIG 7 ;
                         DROP ;
                         DIG 8 ;
                         DROP ;
                         DIG 8 ;
                         DROP ;
                         DIG 8 ;
                         DROP ;
                         DIG 8 ;
                         DROP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP } }
                   { IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 3 ;
                         CAR ;
                         GET 4 ;
                         SENDER ;
                         VIEW "may_trade" bool ;
                         IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                         IF {} { PUSH string "Banned" ; FAILWITH } ;
                         DUP ;
                         CAR ;
                         CAR ;
                         PUSH nat 100 ;
                         SWAP ;
                         COMPARE ;
                         GE ;
                         IF {} { PUSH string "AUC_BID_AMOUNT_TOO_LOW" ; FAILWITH } ;
                         NIL operation ;
                         DIG 4 ;
                         DIG 2 ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 4 ;
                         GET 5 ;
                         PAIR ;
                         SENDER ;
                         DUP 5 ;
                         GET 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         CAR ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         GET 3 ;
                         PAIR ;
                         SENDER ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUG 3 ;
                         PAIR 3 ;
                         EXEC ;
                         CDR ;
                         UNPAIR }
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET 3 ;
                         CAR ;
                         SENDER ;
                         VIEW "is_fa2" bool ;
                         IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                         IF {} { UNIT ; FAILWITH } ;
                         DUP ;
                         GET 5 ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { UNIT ; FAILWITH } ;
                         NIL operation ;
                         DIG 4 ;
                         DIG 2 ;
                         DUP ;
                         GET 6 ;
                         SWAP ;
                         DUP ;
                         DUG 4 ;
                         GET 5 ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         GET 3 ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 5 ;
                         GET 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         CAR ;
                         GET 4 ;
                         SWAP ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         GET 3 ;
                         PAIR ;
                         DIG 4 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         DUG 3 ;
                         PAIR 3 ;
                         EXEC ;
                         CDR ;
                         UNPAIR } } }
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DROP ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         AMOUNT ;
                         ADD ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SELF_ADDRESS ;
                         PAIR ;
                         PUSH (option string) (Some "update_code") ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         EXEC ;
                         IF {} { UNIT ; FAILWITH } ;
                         DUP ;
                         CAR ;
                         IF_LEFT
                           { IF_LEFT
                               { DROP ; DIG 2 ; SWAP ; CDR ; SOME ; PUSH nat 8 ; UPDATE ; SWAP }
                               { IF_LEFT
                                   { DROP ; DIG 2 ; SWAP ; CDR ; SOME ; PUSH nat 9 ; UPDATE ; SWAP }
                                   { DROP ; DIG 2 ; SWAP ; CDR ; SOME ; PUSH nat 10 ; UPDATE ; SWAP } } }
                           { IF_LEFT
                               { DROP ; DIG 2 ; SWAP ; CDR ; SOME ; PUSH nat 11 ; UPDATE ; SWAP }
                               { IF_LEFT
                                   { DROP ; DIG 2 ; SWAP ; CDR ; SOME ; PUSH nat 12 ; UPDATE ; SWAP }
                                   { DROP ; DIG 2 ; SWAP ; CDR ; SOME ; PUSH nat 13 ; UPDATE ; SWAP } } } } ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SELF_ADDRESS ;
                         PAIR ;
                         PUSH (option string) (Some "update_extra_db") ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         EXEC ;
                         IF {} { UNIT ; FAILWITH } ;
                         SWAP ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SWAP ;
                         DUP 7 ;
                         CDR ;
                         SOME ;
                         DIG 7 ;
                         CAR ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET 7 ;
                         CAR ;
                         IF { UNIT ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 7 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              GET 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 5 ;
                              NOW ;
                              COMPARE ;
                              GT ;
                              IF {} { PUSH string "AUC_AUCTION_IS_ONGOING" ; FAILWITH } }
                            {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 7 ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 11 ;
                         COMPARE ;
                         NEQ ;
                         IF { SELF_ADDRESS ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              GET 3 ;
                              DUP 3 ;
                              GET ;
                              IF_NONE { UNIT ; FAILWITH } {} ;
                              GET 7 ;
                              COMPARE ;
                              EQ ;
                              IF { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   GET 3 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 13 ;
                                   IF_NONE
                                     { DIG 3 ;
                                       DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       NIL operation ;
                                       DUP 3 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       CONTRACT unit ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       PUSH mutez 1 ;
                                       DUP 5 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 5 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 9 ;
                                       MUL ;
                                       UNIT ;
                                       TRANSFER_TOKENS ;
                                       CONS }
                                     { DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       DIG 3 ;
                                       DROP ;
                                       NIL operation ;
                                       DUP 3 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 3 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 13 ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       CONTRACT %transfer
                                         (list (pair (address %from_)
                                                     (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                                       IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                                       PUSH mutez 0 ;
                                       NIL (pair address (list (pair address (pair nat nat)))) ;
                                       NIL (pair address (pair nat nat)) ;
                                       DUP 7 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 7 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 9 ;
                                       DUP 8 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 8 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 13 ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CDR ;
                                       DUP 9 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       PAIR 3 ;
                                       CONS ;
                                       SELF_ADDRESS ;
                                       PAIR ;
                                       CONS ;
                                       TRANSFER_TOKENS ;
                                       CONS } }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   GET 3 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE { UNIT ; FAILWITH } {} ;
                                   GET 13 ;
                                   IF_NONE
                                     { DIG 5 ;
                                       DROP ;
                                       DIG 5 ;
                                       DROP ;
                                       NIL operation ;
                                       DIG 4 ;
                                       DIG 3 ;
                                       DUP ;
                                       GET 7 ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 5 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 5 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       PAIR ;
                                       DUP 5 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 5 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 7 ;
                                       PAIR ;
                                       SELF_ADDRESS ;
                                       DIG 5 ;
                                       DUP ;
                                       CAR ;
                                       GET 3 ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 7 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 7 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       CAR ;
                                       VIEW "royalty_adapter" address ;
                                       IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                       PAIR ;
                                       PAIR ;
                                       DUP 5 ;
                                       GET 3 ;
                                       CAR ;
                                       GET 4 ;
                                       DIG 7 ;
                                       DUP 7 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 7 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       CAR ;
                                       PUSH mutez 1 ;
                                       DUP ;
                                       DUP 10 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 10 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 9 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       PAIR ;
                                       SWAP ;
                                       DIG 7 ;
                                       DIG 2 ;
                                       PAIR ;
                                       EXEC ;
                                       UNPAIR ;
                                       DIG 7 ;
                                       DIG 2 ;
                                       DUG 7 ;
                                       DUG 7 ;
                                       PAIR ;
                                       NONE (pair address nat) ;
                                       PAIR ;
                                       DUP 6 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 6 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 11 ;
                                       PUSH mutez 1 ;
                                       DUP ;
                                       DUP 9 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 9 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 9 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       SWAP ;
                                       DUG 2 ;
                                       PAIR ;
                                       EXEC ;
                                       CDR }
                                     { DROP ;
                                       DIG 4 ;
                                       DROP ;
                                       DIG 5 ;
                                       DROP ;
                                       NIL operation ;
                                       DIG 4 ;
                                       DIG 3 ;
                                       DUP ;
                                       GET 7 ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 5 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 5 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       PAIR ;
                                       DUP 5 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 5 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 7 ;
                                       PAIR ;
                                       SELF_ADDRESS ;
                                       DIG 5 ;
                                       DUP ;
                                       CAR ;
                                       GET 3 ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 7 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 7 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       CAR ;
                                       VIEW "royalty_adapter" address ;
                                       IF_NONE { PUSH string "Invalid view" ; FAILWITH } {} ;
                                       PAIR ;
                                       PAIR ;
                                       DUP 5 ;
                                       GET 3 ;
                                       CAR ;
                                       GET 4 ;
                                       DIG 7 ;
                                       DUP 7 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 7 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       CAR ;
                                       CAR ;
                                       DUP 8 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 8 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 13 ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       DUP 9 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 9 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 9 ;
                                       PAIR 3 ;
                                       SWAP ;
                                       DIG 7 ;
                                       DIG 2 ;
                                       PAIR ;
                                       EXEC ;
                                       UNPAIR ;
                                       DIG 7 ;
                                       DIG 2 ;
                                       DUG 7 ;
                                       DUG 7 ;
                                       PAIR ;
                                       DUP 6 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 6 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 13 ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       SOME ;
                                       PAIR ;
                                       DUP 6 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 6 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 11 ;
                                       DUP 7 ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       DUP 7 ;
                                       GET ;
                                       IF_NONE { UNIT ; FAILWITH } {} ;
                                       GET 9 ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       SWAP ;
                                       DUG 2 ;
                                       PAIR ;
                                       EXEC ;
                                       CDR } } }
                            { DIG 3 ;
                              DROP ;
                              DIG 3 ;
                              DROP ;
                              DIG 3 ;
                              DROP ;
                              DIG 3 ;
                              DROP ;
                              NIL operation } ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 3 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         CONTRACT %transfer
                           (list (pair (address %from_)
                                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                         IF_NONE { PUSH string "NOT_FA2" ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         NIL (pair address (list (pair address (pair nat nat)))) ;
                         NIL (pair address (pair nat nat)) ;
                         DUP 7 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 7 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 3 ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 8 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         DUP 9 ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         DUP 9 ;
                         GET ;
                         IF_NONE { UNIT ; FAILWITH } {} ;
                         GET 11 ;
                         PAIR 3 ;
                         CONS ;
                         SELF_ADDRESS ;
                         PAIR ;
                         CONS ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         UNPAIR ;
                         UNPAIR ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         NONE (pair (pair address nat)
                                    (pair nat
                                          (pair timestamp
                                                (pair address (pair nat (pair address (pair (option (pair address nat)) bool))))))) ;
                         DIG 7 ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP } } } } ;
         NIL operation ;
         SWAP ;
         ITER { CONS } ;
         DUG 2 ;
         PAIR ;
         SWAP ;
         PAIR } ;
  view "query_extra_db"
       bytes
       (option bytes)
       { UNPAIR 3 ;
         DIG 2 ;
         DROP ;
         NONE bytes ;
         DUP 3 ;
         CAR ;
         GET 8 ;
         DUP 3 ;
         MEM ;
         IF { DROP ;
              SWAP ;
              CAR ;
              GET 8 ;
              SWAP ;
              GET ;
              IF_NONE { UNIT ; FAILWITH } {} ;
              SOME }
            { SWAP ; DROP ; SWAP ; DROP } } }
